[{"C:\\Users\\q\\Documents\\madCamp_week3\\src\\index.js":"1","C:\\Users\\q\\Documents\\madCamp_week3\\src\\App.js":"2","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Navbar.js":"3","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\Profile.js":"4","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\MyGarden.js":"5","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\Home.js":"6","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Column.jsx":"7","C:\\Users\\q\\Documents\\madCamp_week3\\src\\SidebarData.js":"8","C:\\Users\\q\\Documents\\madCamp_week3\\src\\initial-data.js":"9","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Task.jsx":"10","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\SignUp.js":"11","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\SignUpContainer.js":"12","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\SignUpForm.js":"13","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\validate.js":"14","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\PasswordStr.js":"15","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\Grid.js":"16","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\treeItem.js":"17","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\TreeItem.js":"18","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\TreeColumn.js":"19","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\TreeTask.js":"20","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\TreeList.js":"21","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\test.js":"22","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\Test.js":"23"},{"size":186,"mtime":1610806396929,"results":"24","hashOfConfig":"25"},{"size":788,"mtime":1610808622672,"results":"26","hashOfConfig":"25"},{"size":1551,"mtime":1610806762174,"results":"27","hashOfConfig":"25"},{"size":319,"mtime":1610815386717,"results":"28","hashOfConfig":"25"},{"size":501,"mtime":1610822628085,"results":"29","hashOfConfig":"25"},{"size":5963,"mtime":1610888187025,"results":"30","hashOfConfig":"25"},{"size":1498,"mtime":1610806396910,"results":"31","hashOfConfig":"25"},{"size":715,"mtime":1610806396934,"results":"32","hashOfConfig":"25"},{"size":1007,"mtime":1610809663708,"results":"33","hashOfConfig":"25"},{"size":971,"mtime":1610806396910,"results":"34","hashOfConfig":"25"},{"size":1383,"mtime":1610781502484,"results":"35","hashOfConfig":"25"},{"size":3479,"mtime":1610781856705,"results":"36","hashOfConfig":"25"},{"size":2184,"mtime":1610781594429,"results":"37","hashOfConfig":"25"},{"size":2143,"mtime":1610788954498,"results":"38","hashOfConfig":"25"},{"size":840,"mtime":1610779428324,"results":"39","hashOfConfig":"25"},{"size":4324,"mtime":1610821643082,"results":"40","hashOfConfig":"25"},{"size":1002,"mtime":1610806321479,"results":"41","hashOfConfig":"25"},{"size":2013,"mtime":1610814789139,"results":"42","hashOfConfig":"25"},{"size":1529,"mtime":1610812723002,"results":"43","hashOfConfig":"25"},{"size":841,"mtime":1610809175112,"results":"44","hashOfConfig":"25"},{"size":5273,"mtime":1610820512859,"results":"45","hashOfConfig":"25"},{"size":9332,"mtime":1610825547937,"results":"46","hashOfConfig":"25"},{"size":7841,"mtime":1610826432722,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"otxq0t",{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"102","usedDeprecatedRules":"50"},"C:\\Users\\q\\Documents\\madCamp_week3\\src\\index.js",[],["103","104"],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\App.js",["105","106","107"],"import React from 'react';\r\nimport './style/App.css';\r\nimport Navbar from './Navbar';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Profile from './route/Profile';\r\nimport MyGarden from './route/MyGarden';\r\nimport Home from './route/Home'\r\nimport SignUp from './Sign/SignUp'\r\nimport Timer from './route/TreeColumn'\r\nimport Grid from './route/Grid'\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/Profile' component={Profile} />\r\n        <Route path='/MyGarden' component={MyGarden} />\r\n        {/* <Route path='/timer' component={Timer} /> */}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Navbar.js",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\Profile.js",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\MyGarden.js",["108","109"],"import React from \"react\";\r\n// import { MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\n// import {Container, Col, Row, Button} from 'react-bootstrap';\r\nimport '../style/MyGarden.css'\r\nimport Grid from \"./Grid\"\r\nimport TreeList from \"./TreeList\"\r\nimport Test from \"./Test\"\r\n\r\n\r\nconst MyGarden = () => {\r\n    return (\r\n        <div class =\"flex-container\"> \r\n        {/* <TreeList/> */}\r\n        {/* <Grid/>  */}\r\n        <Test/>\r\n        </div>\r\n\r\n    );  \r\n\r\n}\r\n\r\n        \r\n export default MyGarden;","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\Home.js",["110"],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\Column.jsx",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\SidebarData.js",["111","112"],"import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: 'Home',\r\n    path: '/',\r\n    // icon: <AiIcons.AiFillHome />,\r\n    icon: \"üè°\",\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Profile',\r\n    path: '/profile',\r\n    // icon: <IoIcons.IoIosPaper />,\r\n    icon: \"üë©‚Äçüåæ\",\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'My Garden',\r\n    path: '/mygarden',\r\n    // icon: <FaIcons.FaCartPlus />,\r\n    icon: \"üå±\",\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Timer',\r\n    path: '/timer',\r\n    icon: <FaIcons.FaCartPlus />,\r\n    cName: 'nav-text'\r\n  }\r\n];","C:\\Users\\q\\Documents\\madCamp_week3\\src\\initial-data.js",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\Task.jsx",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\SignUp.js",["113","114","115","116","117"],"import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Popup from 'reactjs-popup'\r\nimport Modal from 'react-modal'\r\nimport { Button } from 'reactstrap';\r\nimport SignUpContainer from \"./SignUpContainer\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {name: \"hello\"};\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <MuiThemeProvider>\r\n            {/* {this.props.children} */}\r\n            <SignUpContainer/>\r\n        </MuiThemeProvider>\r\n        // <Modal.Dialog>\r\n        //     <Modal.Header closeButton>\r\n        //         <Modal.Title>this.state.title</Modal.Title>\r\n        //     </Modal.Header>\r\n\r\n        //     <Modal.Body>\r\n        //         <p>Modal body text goes here.</p>\r\n        //     </Modal.Body>\r\n\r\n        //     <Modal.Footer>\r\n        //         <Button color=\"primary\">primary</Button>{' '}\r\n        //         <Button color=\"secondary\">secondary</Button>{' '}\r\n        //     </Modal.Footer> \r\n        // </Modal.Dialog>\r\n    );\r\n    }\r\n\r\n    // <Popup trigger={<button> Trigger</button>} position=\"right center\">\r\n    //  <div>Popup content here !!</div> \r\n    // {/* <MuiThemeProvider>\r\n    //  <SignUpContainer/>\r\n    // </MuiThemeProvider> */}\r\n    // </Popup>\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\SignUpContainer.js",["118"],"import React, { Component } from \"react\";\r\nimport SignUpForm from \"./SignUpForm.js\";\r\nconst axios = require(\"axios\");\r\nconst FormValidators = require(\"./validate\");\r\nconst validateSignUpForm = FormValidators.validateSignUpForm;\r\nconst zxcvbn = require(\"zxcvbn\");\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errors: {},\r\n      user: {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        pwconfirm: \"\"\r\n      },\r\n      btnTxt: \"show\",\r\n      type: \"password\",\r\n      score: \"0\"\r\n    };\r\n\r\n    this.pwMask = this.pwMask.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submitSignup = this.submitSignup.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.pwHandleChange = this.pwHandleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({\r\n      user\r\n    });\r\n  }\r\n\r\n  pwHandleChange(event) {\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({\r\n      user\r\n    });\r\n\r\n    if (event.target.value === \"\") {\r\n      this.setState((state) =>\r\n        Object.assign({}, state, {\r\n          score: \"null\"\r\n        })\r\n      );\r\n    } else {\r\n      var pw = zxcvbn(event.target.value);\r\n      this.setState((state) =>\r\n        Object.assign({}, state, {\r\n          score: pw.score + 1\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  submitSignup(user) {\r\n    var params = { username: user.usr, password: user.pw, email: user.email };\r\n    axios\r\n      .post(\"https://ouramazingserver.com/api/signup/submit\", params)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          localStorage.token = res.data.token;\r\n          localStorage.isAuthenticated = true;\r\n          window.location.reload();\r\n        } else {\r\n          this.setState({\r\n            errors: { message: res.data.message }\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Sign up data submit error: \", err);\r\n      });\r\n  }\r\n\r\n  validateForm(event) {\r\n    event.preventDefault();\r\n    var payload = validateSignUpForm(this.state.user);\r\n    if (payload.success) {\r\n      this.setState({\r\n        errors: {}\r\n      });\r\n      var user = {\r\n        usr: this.state.user.username,\r\n        pw: this.state.user.password,\r\n        email: this.state.user.email\r\n      };\r\n      this.submitSignup(user);\r\n    } else {\r\n      const errors = payload.errors;\r\n      this.setState({\r\n        errors\r\n      });\r\n    }\r\n  }\r\n\r\n  pwMask(event) {\r\n    event.preventDefault();\r\n    this.setState((state) =>\r\n      Object.assign({}, state, {\r\n        type: this.state.type === \"password\" ? \"input\" : \"password\",\r\n        btnTxt: this.state.btnTxt === \"show\" ? \"hide\" : \"show\"\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignUpForm\r\n          onSubmit={this.validateForm}\r\n          onChange={this.handleChange}\r\n          onPwChange={this.pwHandleChange}\r\n          errors={this.state.errors}\r\n          user={this.state.user}\r\n          score={this.state.score}\r\n          btnTxt={this.state.btnTxt}\r\n          type={this.state.type}\r\n          pwMask={this.pwMask}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpContainer;\r\n\r\n// module.exports = SignUpContainer;\r\n\r\n\r\n","C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\SignUpForm.js",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\validate.js",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\Sign\\PasswordStr.js",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\Grid.js",["119"],"import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"../style/grid.css\"\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\", \"üë©‚Äçü¶∞\", \"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\", \"üë©‚Äçü¶≥\", \"üë∏\"];\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    //id: tree [k+ offset],//-new Date().getTime(),\r\n    id:  `item-${k + offset}-${new Date().getTime()}`,\r\n    content: tree [k+ offset] \r\n    //content: `item ${k + offset}`\r\n  }));\r\n\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nfunction Grid (){\r\n  const [state, setState] = useState([getItems(3)])\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     items: getItems(10)\r\n  //   };\r\n  //   this.onDragEnd = this.onDragEnd.bind(this);\r\n  // }\r\nfunction onDragEnd(result) {\r\n    const { source, destination } = result;\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n    if (sInd === dInd) {\r\n      const items = reorder(state[sInd], source.index, destination.index);\r\n      const newState = [...state];\r\n      newState[sInd] = items;\r\n      setState(newState);\r\n    } else {\r\n      const result = move(state[sInd], state[dInd], source, destination);\r\n      const newState = [...state];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setState(newState.filter(group => group.length));\r\n    }\r\n    // const items = reorder(\r\n    //   this.state.items,\r\n    //   result.source.index,\r\n    //   result.destination.index\r\n    // );\r\n\r\n    // this.setState({\r\n    //   items\r\n    // });\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <div className = \"grid\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {item.content}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  \r\n}\r\n\r\nexport default Grid;\r\n","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\treeItem.js",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\TreeItem.js",["120","121","122","123","124","125","126","127"],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\TreeColumn.js",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\TreeTask.js",[],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\TreeList.js",["128","129"],"import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\"];\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n    \r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    //id: tree [k+ offset],//-new Date().getTime(),\r\n    id:  `item-${k + offset}-${new Date().getTime()}`,\r\n    content: tree [k+ offset] \r\n    //content: `item ${k + offset}`\r\n  }));\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nfunction TreeList() {\r\n  const [state, setState] = useState([getItems(3)])\r\n  //= useState([getItems(3), getItems(5, 10)]);\r\n\r\n  function onDragEnd(result) {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n\r\n    if (sInd === dInd) {\r\n      const items = reorder(state[sInd], source.index, destination.index);\r\n      const newState = [...state];\r\n      newState[sInd] = items;\r\n      setState(newState);\r\n    } else {\r\n      const result = move(state[sInd], state[dInd], source, destination);\r\n      const newState = [...state];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setState(newState.filter(group => group.length));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       {/* <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, []]);\r\n        }}\r\n      >\r\n        Add new group\r\n      </button> \r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, getItems(1)]);\r\n        }}\r\n      >\r\n        Add new item\r\n      </button>  */}\r\n      <div style={{ display: \"flex\" }}>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {state.map((el, ind) => (\r\n            <Droppable key={ind} droppableId={`${ind}`}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  style={getListStyle(snapshot.isDraggingOver)}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {el.map((item, index) => (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}\r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-around\"\r\n                            }}\r\n                          >\r\n                            {item.content}\r\n                            {/* <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                const newState = [...state];\r\n                                newState[ind].splice(index, 1);\r\n                                setState(\r\n                                  newState.filter(group => group.length)\r\n                                );\r\n                              }}\r\n                            >\r\n                              delete\r\n                            </button> */}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeList;\r\n","C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\test.js",["130","131"],"C:\\Users\\q\\Documents\\madCamp_week3\\src\\route\\Test.js",["132","133","134","135"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport \"../style/Test.css\"\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\"];\r\nconst ground = [\"üéÖ\", \"üë©‚Äçüé§\", \"üëº\", \"üë©‚Äçü¶∞\", \"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\", \"üë©‚Äçü¶≥\", \"üë∏\"];\r\n\r\n// // fake data generator\r\n// const getItems = (count, offset = 0) =>\r\n//     Array.from({ length: count }, (v, k) => k).map(k => ({\r\n//         id: `item-${k + offset}`,\r\n//         content: `item ${k + offset}`\r\n//     }));\r\n\r\nconst treeList = (count, offset = 0) =>\r\n    Array.from({length: count},(v, k) => k).map(k => ({\r\n        id: `item==${k + offset}`,\r\n        content: tree [k+ offset] \r\n    }))\r\n\r\nconst groundList = (count, offset = 0) =>\r\n    Array.from({length: count},(v, k) => k).map(k => ({\r\n        id: `ite==${k + offset}`,\r\n        content: ground [k+ offset] \r\n    }))\r\n\r\n// a little function to help us with reordering the result\r\n// const reorder = (list, startIndex, endIndex) => {\r\n//     const result = Array.from(list);\r\n//     const [removed] = result.splice(startIndex, 1);\r\n//     result.splice(endIndex, 0, removed);\r\n\r\n//     return result;\r\n// };\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    //source ÏõÄÏßÅÏù∏ Ï™ΩÏùò Î¶¨Ïä§Ìä∏, destClone Î™©Ï†ÅÏßÄ Ï™ΩÏùò Î¶¨Ïä§Ìä∏\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    console.log(sourceClone)\r\n    console.log(destClone)\r\n\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    //ÏòÆÍ≤®ÏßÑ ÏïÑÏù¥ÌÖú [removed]\r\n    console.log([removed])\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 20;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    padding: grid ,\r\n    margin: `${grid}px ${grid}px ${grid}px ${grid}px`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? 'lightgreen' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n    padding: grid,\r\n    width: 250\r\n});\r\n\r\nclass test extends React.Component {\r\n    state = {\r\n        items: treeList(3),\r\n        selected: groundList(5),\r\n       // extension: groundList(5)\r\n    };\r\n\r\n    /**\r\n     * A semi-generic way to handle multiple lists. Matches\r\n     * the IDs of the droppable container to the names of the\r\n     * source arrays stored in the state.\r\n     */\r\n    id2List = {\r\n        droppable: 'items',\r\n        droppable2: 'selected',\r\n        //droppable3: 'extension'\r\n\r\n    };\r\n\r\n    getList = id => this.state[this.id2List[id]];\r\n  \r\n    onDragEnd = result => {\r\n        const { source, destination } = result;\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        console.log(source.droppableID)\r\n        console.log(destination.droppableID)\r\n        console.log(source)\r\n        console.log(destination)\r\n        //ÏûêÍ∏∞ ÏûêÏã†ÏúºÎ°ú ÏõÄÏßÅÏù¥Îäî Í≤ΩÏö∞ \r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(this.getList(source.droppableId),source.index,destination.index);\r\n            let state = { items };\r\n            //Î™®Î•¥Í≤†Ïùå\r\n            if (source.droppableId === 'droppable2') {\r\n                state = { selected: items };\r\n            }\r\n            this.setState(state);\r\n        } else {\r\n            //ÏõÄÏßÅÏù∏ ÏÉÅÌÉú Í≤∞Í≥º Í∞í \r\n            const result = move(this.getList(source.droppableId),this.getList(destination.droppableId),source,destination);\r\n\r\n            this.setState({items: result.droppable, selected: result.droppable2\r\n            });\r\n        }\r\n    };\r\n\r\n    // Normally you would want to split things out into separate components.\r\n    // But in this example everything is just done in one place for simplicity\r\n    render() {\r\n        return (\r\n          \r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div className = \"droppable\">\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                            {this.state.items.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                </div>\r\n                <div className = \"droppable2\">\r\n                <Droppable droppableId=\"droppable2\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                            {this.state.selected.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                </div>\r\n            </DragDropContext>\r\n         \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default test;\r\n",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":14},{"ruleId":"140","severity":1,"message":"144","line":10,"column":8,"nodeType":"142","messageId":"143","endLine":10,"endColumn":13},{"ruleId":"140","severity":1,"message":"145","line":11,"column":8,"nodeType":"142","messageId":"143","endLine":11,"endColumn":12},{"ruleId":"140","severity":1,"message":"145","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":12},{"ruleId":"140","severity":1,"message":"146","line":6,"column":8,"nodeType":"142","messageId":"143","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":50,"column":7,"nodeType":"149","endLine":50,"endColumn":36},{"ruleId":"140","severity":1,"message":"150","line":3,"column":13,"nodeType":"142","messageId":"143","endLine":3,"endColumn":20},{"ruleId":"140","severity":1,"message":"151","line":4,"column":13,"nodeType":"142","messageId":"143","endLine":4,"endColumn":20},{"ruleId":"140","severity":1,"message":"152","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"153","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"140","severity":1,"message":"154","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":13},{"ruleId":"140","severity":1,"message":"155","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":13},{"ruleId":"140","severity":1,"message":"156","line":5,"column":10,"nodeType":"142","messageId":"143","endLine":5,"endColumn":16},{"ruleId":"140","severity":1,"message":"152","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":11,"column":14,"nodeType":"149","messageId":"159","endLine":11,"endColumn":30,"fix":"160"},{"ruleId":"140","severity":1,"message":"161","line":3,"column":21,"nodeType":"142","messageId":"143","endLine":3,"endColumn":24},{"ruleId":"140","severity":1,"message":"162","line":3,"column":26,"nodeType":"142","messageId":"143","endLine":3,"endColumn":29},{"ruleId":"140","severity":1,"message":"156","line":3,"column":31,"nodeType":"142","messageId":"143","endLine":3,"endColumn":37},{"ruleId":"140","severity":1,"message":"163","line":5,"column":10,"nodeType":"142","messageId":"143","endLine":5,"endColumn":22},{"ruleId":"140","severity":1,"message":"164","line":5,"column":24,"nodeType":"142","messageId":"143","endLine":5,"endColumn":30},{"ruleId":"140","severity":1,"message":"165","line":5,"column":32,"nodeType":"142","messageId":"143","endLine":5,"endColumn":38},{"ruleId":"140","severity":1,"message":"166","line":6,"column":8,"nodeType":"142","messageId":"143","endLine":6,"endColumn":14},{"ruleId":"140","severity":1,"message":"167","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":18},{"ruleId":"140","severity":1,"message":"153","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":12,"column":14,"nodeType":"149","messageId":"159","endLine":12,"endColumn":30,"fix":"168"},{"ruleId":"140","severity":1,"message":"152","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"153","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"140","severity":1,"message":"152","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"153","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":18,"column":18,"nodeType":"149","messageId":"159","endLine":18,"endColumn":34,"fix":"169"},{"ruleId":"157","severity":1,"message":"158","line":24,"column":18,"nodeType":"149","messageId":"159","endLine":24,"endColumn":36,"fix":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'SignUp' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'Grid' is defined but never used.","'TreeList' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'AiIcons' is defined but never used.","'IoIcons' is defined but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'Popup' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property k+ offset.","unexpectedWhitespace",{"range":"173","text":"174"},"'Col' is defined but never used.","'Row' is defined but never used.","'MDBContainer' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'styled' is defined but never used.","'TreeColumn' is defined but never used.",{"range":"175","text":"174"},{"range":"176","text":"174"},{"range":"177","text":"174"},"no-global-assign","no-unsafe-negation",[487,488],"",[446,447],[697,698],[881,882]]