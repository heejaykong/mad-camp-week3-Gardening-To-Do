<<<<<<< HEAD
[{"C:\\Users\\q\\MadCampWeek3-test2\\src\\index.js":"1","C:\\Users\\q\\MadCampWeek3-test2\\src\\App.js":"2","C:\\Users\\q\\MadCampWeek3-test2\\src\\Navbar.js":"3","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Profile.js":"4","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\TreeColumn.js":"5","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Login.js":"6","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Grid.js":"7","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyProfile.js":"8","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUp.js":"9","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Home.js":"10","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyGarden.js":"11","C:\\Users\\q\\MadCampWeek3-test2\\src\\SidebarData.js":"12","C:\\Users\\q\\MadCampWeek3-test2\\src\\Column.jsx":"13","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUpContainer.js":"14","C:\\Users\\q\\MadCampWeek3-test2\\src\\initial-data.js":"15","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\DoneDialog.js":"16","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Timer.js":"17","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Test.js":"18","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\TreeList.js":"19","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Tree.js":"20","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\SetTimer.js":"21","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Dialog.js":"22","C:\\Users\\q\\MadCampWeek3-test2\\src\\Task.jsx":"23","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUpForm.js":"24","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\validate.js":"25","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\PasswordStr.js":"26","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyTree.js":"27"},{"size":186,"mtime":1610980055737,"results":"28","hashOfConfig":"29"},{"size":927,"mtime":1611063242328,"results":"30","hashOfConfig":"29"},{"size":1545,"mtime":1611073155217,"results":"31","hashOfConfig":"29"},{"size":773,"mtime":1610980055741,"results":"32","hashOfConfig":"29"},{"size":1529,"mtime":1610980055743,"results":"33","hashOfConfig":"29"},{"size":3153,"mtime":1611063242334,"results":"34","hashOfConfig":"29"},{"size":4324,"mtime":1610980055739,"results":"35","hashOfConfig":"29"},{"size":5011,"mtime":1611063340325,"results":"36","hashOfConfig":"29"},{"size":635,"mtime":1610995057238,"results":"37","hashOfConfig":"29"},{"size":8472,"mtime":1611070364280,"results":"38","hashOfConfig":"29"},{"size":1809,"mtime":1611063242335,"results":"39","hashOfConfig":"29"},{"size":604,"mtime":1610980055734,"results":"40","hashOfConfig":"29"},{"size":2419,"mtime":1611032368819,"results":"41","hashOfConfig":"29"},{"size":3386,"mtime":1611032205067,"results":"42","hashOfConfig":"29"},{"size":875,"mtime":1611070837565,"results":"43","hashOfConfig":"29"},{"size":1948,"mtime":1610980055738,"results":"44","hashOfConfig":"29"},{"size":2852,"mtime":1611063242337,"results":"45","hashOfConfig":"29"},{"size":10587,"mtime":1610980055742,"results":"46","hashOfConfig":"29"},{"size":5273,"mtime":1610980055744,"results":"47","hashOfConfig":"29"},{"size":94,"mtime":1610980055743,"results":"48","hashOfConfig":"29"},{"size":4215,"mtime":1611071303770,"results":"49","hashOfConfig":"29"},{"size":2732,"mtime":1611063242333,"results":"50","hashOfConfig":"29"},{"size":1781,"mtime":1611063813351,"results":"51","hashOfConfig":"29"},{"size":2061,"mtime":1611063242330,"results":"52","hashOfConfig":"29"},{"size":2143,"mtime":1610984140176,"results":"53","hashOfConfig":"29"},{"size":840,"mtime":1610980055735,"results":"54","hashOfConfig":"29"},{"size":1139,"mtime":1611063242336,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"ka4wwl",{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\q\\MadCampWeek3-test2\\src\\index.js",[],["122","123"],"C:\\Users\\q\\MadCampWeek3-test2\\src\\App.js",["124","125","126"],"import React from 'react';\r\nimport './style/App.css';\r\nimport Navbar from './Navbar';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Profile from './route/Profile';\r\nimport MyGarden from './route/MyGarden';\r\nimport Home from './route/Home'\r\nimport SignUp from './Sign/SignUp'\r\nimport Timer from './route/TreeColumn'\r\nimport Grid from './route/Grid'\r\nimport Login from './route/Login'\r\nimport MyProfile from './route/MyProfile'\r\n\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/signup' exact component={SignUp} />\r\n        <Route path='/login' exact component={Login} />\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/profile' component={MyProfile} />\r\n        <Route path='/mygarden' component={MyGarden} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;","C:\\Users\\q\\MadCampWeek3-test2\\src\\Navbar.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Profile.js",["127","128","129","130","131"],"import React, {Text} from \"react\";\r\nimport {Row, Col, Container} from \"react-bootstrap\"\r\nimport img_woman from '../Image/woman.png';\r\n// import \"../style/Profile.css\"\r\nimport '../style/MyProfile.css';\r\nclass Profile extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  nickname: \"sojeong\",\r\n\t\t  password:\"1234\",\r\n\t\t  lifeCount:\"10\",\r\n\t\t  killCount:\"2\"\r\n\t\t  }  \r\n\t\t};\r\n\trender(){\r\n\treturn (\r\n\t\t<div className='Profile'>\r\n\t\t\t{/* <motion.div animate = {{scale:0.5}}/> */}\r\n\t\t\t<img src = {img_woman}/>\r\n\t\t\t<p>name : {this.state.nickname}</p>\r\n\t\t\t<p>PassWord : {this.state.password}</p>\r\n\t\t\t<p>plant count : {this.state.lifeCount}</p>\r\n\t\t\t<p>dead plant count : {this.state.killCount}</p>\r\n\r\n\t\t</div>\r\n\r\n\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Profile;","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\TreeColumn.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Login.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Grid.js",["132"],"import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"../style/grid.css\"\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\", \"üë©‚Äçü¶∞\", \"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\", \"üë©‚Äçü¶≥\", \"üë∏\"];\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    //id: tree [k+ offset],//-new Date().getTime(),\r\n    id:  `item-${k + offset}-${new Date().getTime()}`,\r\n    content: tree [k+ offset] \r\n    //content: `item ${k + offset}`\r\n  }));\r\n\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nfunction Grid (){\r\n  const [state, setState] = useState([getItems(3)])\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     items: getItems(10)\r\n  //   };\r\n  //   this.onDragEnd = this.onDragEnd.bind(this);\r\n  // }\r\nfunction onDragEnd(result) {\r\n    const { source, destination } = result;\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n    if (sInd === dInd) {\r\n      const items = reorder(state[sInd], source.index, destination.index);\r\n      const newState = [...state];\r\n      newState[sInd] = items;\r\n      setState(newState);\r\n    } else {\r\n      const result = move(state[sInd], state[dInd], source, destination);\r\n      const newState = [...state];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setState(newState.filter(group => group.length));\r\n    }\r\n    // const items = reorder(\r\n    //   this.state.items,\r\n    //   result.source.index,\r\n    //   result.destination.index\r\n    // );\r\n\r\n    // this.setState({\r\n    //   items\r\n    // });\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <div className = \"grid\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {item.content}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  \r\n}\r\n\r\nexport default Grid;\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyProfile.js",["133","134"],"import React from \"react\";\r\nimport '../style/MyProfile.css';\r\nconst ImgUpload =({onChange,src})=>\r\n<label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\">\r\n      <div className=\"img-wrap img-upload\" >\r\n        <img htmlFor=\"photo-upload\" src={src}/>\r\n      </div>\r\n      <input id=\"photo-upload\" type=\"file\" onChange={onChange}/> \r\n    </label>\r\n\r\n  const nameText = localStorage.getItem(\"name\");\r\n  const passText = localStorage.getItem(\"pass\");\r\n  const emailText = localStorage.getItem(\"email\");\r\n\r\n  const Name =({onChange,value})=>\r\n  \r\n    <div className=\"field\">\r\n      <label htmlFor=\"name\"> name: </label>\r\n\r\n      {/* <h3>{nameText}</h3> */}\r\n      {/* <input id=\"name\" type=\"text\" onChange={onChange} maxLength=\"25\" value = \"hi\"/> */}\r\n    </div>\r\n  \r\n    \r\n  const Status =({onChange, valueColumncar})=>\r\n    <div className=\"field\">\r\n      <label htmlFor=\"status\">PASSWORD:</label>\r\n      <h3>{passText}</h3>\r\n      <input id=\"status\" type=\"text\" onChange={onChange}  maxLength=\"35\"  required/>\r\n    </div>\r\n\r\nconst Email =({onChange,valueColumncar})=>\r\n<div className=\"field\">\r\n  <label htmlFor=\"email\">EMAIL</label>\r\n <h3>{emailText}</h3>\r\n  <input id=\"email\" type=\"text\" onChange={onChange}  maxLength=\"35\"  required/>\r\n</div>\r\n\r\n  const KillCount =({onChange,valueColumncar})=>\r\n    <div className=\"field\">\r\n      <label htmlFor=\"killcount\">Kill Count </label>\r\n      <input id=\"killcount\" type=\"text\" onChange={onChange}  maxLength=\"35\"  required/>\r\n    </div>\r\n\r\n    const AllPlant =({onChange,valueColumncar})=>\r\n      <div className=\"field\">\r\n        <label htmlFor=\"AllPlant\"> All plant:</label>\r\n        <input  id=\"AllPlant\"  type=\"text\"   onChange={onChange} maxLength=\"35\"   required/>\r\n      </div>\r\n  \r\n  \r\n  const Profile =({\r\n    onSubmit,\r\n    src,\r\n    name,\r\n    status,\r\n    email,\r\n    KillCount,\r\n    AllPlant\r\n  })=>\r\n    <div className=\"card\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"name\">{name}</div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"email\">{email}</div>\r\n        <div className=\"KillCount\">{KillCount}</div>\r\n        <div className=\"AllPlant\">{AllPlant}</div>\r\n        <button type=\"save\" className=\"edit\">Edit Profile </button>\r\n      </form>\r\n    </div>\r\n       \r\n        \r\n  const Edit =({ onSubmit, children})=>\r\n    <div className=\"card\">\r\n      <form onSubmit={onSubmit}>\r\n          {children}\r\n        <button type=\"edit\" className=\"save\">edit </button>\r\n      </form>\r\n    </div>\r\n  \r\n  class MyProfile extends React.Component {\r\n    state = {\r\n      file: '',\r\n      imagePreviewUrl: 'https://github.com/OlgaKoplik/CodePen/blob/master/profile.jpg?raw=true',\r\n      name:'',\r\n      status:'',\r\n      email:'',\r\n      KillCount:'',\r\n      AllPlant:'',\r\n      active: 'edit'\r\n    }\r\n  \r\n    photoUpload = e =>{\r\n      e.preventDefault();\r\n      const reader = new FileReader();\r\n      const file = e.target.files[0];\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          file: file,\r\n          imagePreviewUrl: reader.result\r\n        });\r\n      }\r\n      reader.readAsDataURL(file);\r\n    }\r\n    editName = e =>{\r\n      const name = e.target.value;\r\n      this.setState({\r\n        name,\r\n      });\r\n    }\r\n    editEmail = e =>{\r\n      const email = e.target.value;\r\n      this.setState({\r\n        email,\r\n      });\r\n    }\r\n    \r\n    editStatus = e => {\r\n      const status = e.target.value;\r\n      this.setState({\r\n        status,\r\n      });\r\n    }\r\n    editKillCount = e => {\r\n      const KillCount = e.target.value;\r\n      this.setState({\r\n        KillCount,\r\n      });\r\n    }\r\n    editAllPlant = e => {\r\n      const AllPlant = e.target.value;\r\n      this.setState({\r\n        AllPlant,\r\n      });\r\n    }\r\n    \r\n    handleSubmit= e =>{\r\n      e.preventDefault();\r\n      let activeP = this.state.active === 'edit' ? 'profile' : 'edit';\r\n      this.setState({\r\n        active: activeP,\r\n      })\r\n    }\r\n    \r\n    render() {\r\n      const {imagePreviewUrl, \r\n             name, \r\n             status, email, killCount, allPlant,\r\n             active} = this.state;\r\n      return (\r\n        <div>\r\n          {(active === 'edit')?(\r\n            <Edit onSubmit={this.handleSubmit}>\r\n              <ImgUpload onChange={this.photoUpload} src={imagePreviewUrl}/>\r\n              <Name onChange={this.editName} value={name}/>\r\n              <Status onChange={this.editStatus} value={status}/>\r\n              <Email onChange={this.editEmail} value={email}/>\r\n              <KillCount onChange={this.editKillCount} value={killCount}/>\r\n              <AllPlant onChange={this.editAllPlant} value={allPlant}/>\r\n            </Edit>\r\n          ):(\r\n            <Profile \r\n              onSubmit={this.handleSubmit} \r\n              src={imagePreviewUrl} \r\n              name={name} \r\n              status={status}\r\n              email={email}\r\n              KillCount={KillCount}\r\n              AppPlant={AllPlant}/>)}\r\n          \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n export default MyProfile;","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUp.js",["135","136","137","138","139"],"import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Popup from 'reactjs-popup'\r\nimport Modal from 'react-modal'\r\nimport { Button } from 'reactstrap';\r\nimport SignUpContainer from \"./SignUpContainer\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {name: \"hello\"};\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <MuiThemeProvider>\r\n            {this.props.children}\r\n            <SignUpContainer/>\r\n        </MuiThemeProvider>\r\n    );\r\n    }\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Home.js",["140","141","142","143","144","145","146","147","148","149","150"],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyGarden.js",["151","152","153","154","155","156","157","158"],"import React from \"react\";\r\n// import { MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\n// import {Container, Col, Row, Button} from 'react-bootstrap';\r\nimport '../style/MyGarden.css'\r\nimport Grid from \"./Grid\"\r\nimport TreeList from \"./TreeList\"\r\nimport Test from \"./Test\"\r\nimport Tree from \"./Tree\"\r\nimport My from \"./My\"\r\nimport Ground from '../Image/ground1.png';\r\nimport grass from '../Image/grass1.png';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Dialog from \"./Dialog\";\r\n\r\nclass MyGarden extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: true,\r\n            //itemFriends: [\"üéÑ\", \"üéà\", \"üéÉ\"]\r\n        }\r\n    }\r\n    _showDialog() {\r\n        this.setState({showDialog: this.state.showDialog});\r\n    }\r\n\t_showItem() {\r\n        this.setState({item: this.state.itemFriends});\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='MyGarden'>\r\n                \r\n                {/* <img src = {Ground} className=\"img-garden\"/> */}\r\n                <div className=\"img-garden\"/>\r\n\t\t\t\t{this._showDialog.bind(this)}\r\n                {this._showItem.bind(this)}\r\n                {/* <Button className='button' onClick={this._showDialog.bind(this)}> Show item </Button> */}\r\n                <Dialog show={this.state.showDialog} />\r\n                {/* <Dialog  show={this.state.showDialog} item = {this.state.item1}/> */}\r\n                {/* <Dialog  show={this.state.showDialog} item = {this.state.item2}/> */}\r\n                {/* <Dialog  show={this.state.showDialog} item = {this.state.item4}/>  */}\r\n           \r\n         \r\n\t\t\t </div>\r\n\r\n\t\t);\r\n\t}\r\n} \r\nexport default MyGarden;\r\n    \r\n\r\n\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\SidebarData.js",["159","160","161","162"],"import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: 'Home',\r\n    path: '/',\r\n    // icon: <AiIcons.AiFillHome />,\r\n    icon: \"üè°\",\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Profile',\r\n    path: '/profile',\r\n    // icon: <IoIcons.IoIosPaper />,\r\n    icon: \"üë©‚Äçüåæ\",\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'My Garden',\r\n    path: '/mygarden',\r\n    // icon: <FaIcons.FaCartPlus />,\r\n    icon: \"üå±\",\r\n    cName: 'nav-text'\r\n  }\r\n];","C:\\Users\\q\\MadCampWeek3-test2\\src\\Column.jsx",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUpContainer.js",["163"],"import React, { Component } from \"react\";\r\nimport SignUpForm from \"./SignUpForm.js\";\r\nconst axios = require(\"axios\");\r\nconst FormValidators = require(\"./validate\");\r\nconst validateSignUpForm = FormValidators.validateSignUpForm;\r\nconst zxcvbn = require(\"zxcvbn\");\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errors: {},\r\n      user: {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        pwconfirm: \"\"\r\n      },\r\n      btnTxt: \"show\",\r\n      type: \"password\",\r\n      score: \"0\"\r\n    };\r\n\r\n    this.pwMask = this.pwMask.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submitSignup = this.submitSignup.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.pwHandleChange = this.pwHandleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({\r\n      user\r\n    });\r\n  }\r\n\r\n  pwHandleChange(event) {\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({\r\n      user\r\n    });\r\n\r\n    if (event.target.value === \"\") {\r\n      this.setState((state) =>\r\n        Object.assign({}, state, {\r\n          score: \"null\"\r\n        })\r\n      );\r\n    } else {\r\n      var pw = zxcvbn(event.target.value);\r\n      this.setState((state) =>\r\n        Object.assign({}, state, {\r\n          score: pw.score + 1\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  submitSignup(user) {\r\n    var params = { username: user.usr, password: user.pw, email: user.email };\r\n    axios\r\n      .post(\"https://ouramazingserver.com/api/signup/submit\", params)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          localStorage.token = res.data.token;\r\n          localStorage.isAuthenticated = true;\r\n          window.location.reload();\r\n        } else {\r\n          this.setState({\r\n            errors: { message: res.data.message }\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Sign up data submit error: \", err);\r\n      });\r\n  }\r\n\r\n  validateForm(event) {\r\n    event.preventDefault();\r\n    var payload = validateSignUpForm(this.state.user);\r\n    if (payload.success) {\r\n      this.setState({\r\n        errors: {}\r\n      });\r\n      var user = {\r\n        usr: this.state.user.username,\r\n        pw: this.state.user.password,\r\n        email: this.state.user.email\r\n      };\r\n      this.submitSignup(user);\r\n    }\r\n     else {\r\n      const errors = payload.errors;\r\n      this.setState({\r\n        errors\r\n      });\r\n    }\r\n  }\r\n\r\n  pwMask(event) {\r\n    event.preventDefault();\r\n    this.setState((state) =>\r\n      Object.assign({}, state, {\r\n        type: this.state.type === \"password\" ? \"input\" : \"password\",\r\n        btnTxt: this.state.btnTxt === \"show\" ? \"hide\" : \"show\"\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignUpForm onSubmit={this.validateForm} onChange={this.handleChange} onPwChange={this.pwHandleChange} e\r\n        rrors={this.state.errors} user={this.state.user} score={this.state.score} btnTxt={this.state.btnTxt} type={this.state.type} pwMask={this.pwMask}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpContainer;\r\n\r\n// module.exports = SignUpContainer;\r\n\r\n\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\initial-data.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\DoneDialog.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Timer.js",["164","165"],"import React, { PropTypes, Component } from 'react';\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        days: 0,\r\n        hours: 0,\r\n        min: 0,\r\n        sec: 0,\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // update every second\r\n        this.interval = setInterval(() => {\r\n          const date = this.calculateCountdown(this.props.date);\r\n          date ? this.setState(date) : this.stop();\r\n        }, 1000);\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        this.stop();\r\n      }\r\n\r\n      calculateCountdown(endDate) {\r\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n        console.log(new Date(endDate));\r\n        console.log(Date.parse(new Date(endDate)));\r\n        console.log(\"diff\", diff);\r\n    \r\n        // clear countdown when date is reached\r\n        if (diff <= 0) return false;\r\n    \r\n        const timeLeft = {\r\n          years: 0,\r\n          days: 0,\r\n          hours: 0,\r\n          min: 0,\r\n          sec: 0,\r\n          millisec: 0,\r\n        };\r\n    \r\n        // calculate time difference between now and expected date\r\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n          timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n          diff -= timeLeft.years * 365.25 * 86400;\r\n        }\r\n        if (diff >= 86400) { // 24 * 60 * 60\r\n          timeLeft.days = Math.floor(diff / 86400);\r\n          diff -= timeLeft.days * 86400;\r\n        }\r\n        if (diff >= 3600) { // 60 * 60\r\n          timeLeft.hours = Math.floor(diff / 3600);\r\n          diff -= timeLeft.hours * 3600;\r\n        }\r\n        if (diff >= 60) {\r\n          timeLeft.min = Math.floor(diff / 60);\r\n          diff -= timeLeft.min * 60;\r\n        }\r\n        timeLeft.sec = diff;\r\n    \r\n        return timeLeft;\r\n      }\r\n\r\n      stop() {\r\n        clearInterval(this.interval);\r\n      }\r\n    \r\n      addLeadingZeros(value) {\r\n        value = String(value);\r\n        while (value.length < 2) {\r\n          value = '0' + value;\r\n        }\r\n        return value;\r\n      }\r\n    \r\n      render() {\r\n        const Timer = this.state;\r\n    \r\n        return (\r\n          <div className=\"Countdown\">\r\n            <span className=\"Countdown-col\">\r\n              <span className=\"Countdown-col-element\">\r\n                  <strong>{this.addLeadingZeros(Timer.days)}</strong>\r\n                  <span>{Timer.days === 1 ? 'Day' : 'Days'}</span>\r\n              </span>\r\n            </span>\r\n    \r\n            <span className=\"Countdown-col\">\r\n              <span className=\"Countdown-col-element\">\r\n                <strong>{this.addLeadingZeros(Timer.hours)}</strong>\r\n                <span>Hours</span>\r\n              </span>\r\n            </span>\r\n    \r\n    \r\n            <span className=\"Countdown-col\">\r\n              <span className=\"Countdown-col-element\">\r\n                <strong>{this.addLeadingZeros(Timer.min)}</strong>\r\n                <span>Min</span>\r\n              </span>\r\n            </span>\r\n    \r\n            <span className=\"Countdown-col\">\r\n              <span className=\"Countdown-col-element\">\r\n                <strong>{this.addLeadingZeros(Timer.sec)}</strong>\r\n                <span>Sec</span>\r\n              </span>\r\n            </span>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    // Timer.PropTypes = {\r\n    //   date: PropTypes.String.isRequired\r\n    // };\r\n    \r\n    // Timer.defaultProps = {\r\n    //   date: new Date()\r\n    // };\r\n    \r\n    export default Timer;\r\n\r\n      \r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Test.js",["166","167","168"],"import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport \"../style/Test.css\"\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\"];\r\nconst ground = [\"üéÖ\", \"üë©‚Äçüé§\", \"üëº\", \"üë©‚Äçü¶∞\",\"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\"]\r\n// const extension = [\"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\"]\r\n// [[\"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\"],\r\n//  [\"üë©‚Äçü¶≥\", \"üë∏\", \"üôÇ\",\"üò†\"],\r\n//  [\"üòî\",\"üòñ\",\"üôÅ\",\"ü§¨\"],\r\n//  [\"ü•∂\", \"üò¶\",\"ü§¢\", \"üòà\"]];\r\n\r\n// // fake data generator\r\n// const getItems = (count, offset = 0) =>\r\n//     Array.from({ length: count }, (v, k) => k).map(k => ({\r\n//         id: `item-${k + offset}`,\r\n//         content: `item ${k + offset}`\r\n//     }));\r\n// const groundList =(count, offset =0)=> \r\n// const array\r\n// (tree.map((items, index) => {\r\n//     {items.map((subItem, sIndex) =>{\r\n//         id: `item==${sIndex + offset}`,\r\n//         content: tree [sIndex + offset] \r\n//     })}\r\n// }))\r\n\r\n\r\nconst treeList = (count, offset = 0) =>\r\n    Array.from({length: count},(v, k) => k).map(k => ({\r\n        id: `item==${k + offset}`,\r\n        content: tree [k+ offset] \r\n    }))\r\n\r\nconst groundList = (count, offset = 0) =>\r\n    Array.from({length: count},(v, k) => k).map(k => ({\r\n        id: `ite==${k + offset}`,\r\n        content: ground [k+ offset] \r\n    }))\r\n\r\n// const extensionList = (count, offset = 0) =>\r\n// Array.from({length: count},(v, k) => k).map(k => ({\r\n//     id: `ite==${k + offset}`,\r\n//     content: extension [k+ offset] \r\n// }))\r\n\r\n\r\n// a little function to help us with reordering the result\r\n// const reorder = (list, startIndex, endIndex) => {\r\n//     const result = Array.from(list);\r\n//     const [removed] = result.splice(startIndex, 1);\r\n//     result.splice(endIndex, 0, removed);\r\n\r\n//     return result;\r\n// };\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    //source ÏõÄÏßÅÏù∏ Ï™ΩÏùò Î¶¨Ïä§Ìä∏, destClone Î™©Ï†ÅÏßÄ Ï™ΩÏùò Î¶¨Ïä§Ìä∏\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    console.log(sourceClone)\r\n    console.log(destClone)\r\n\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    //ÏòÆÍ≤®ÏßÑ ÏïÑÏù¥ÌÖú [removed]\r\n    console.log([removed])\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 20;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    padding: grid ,\r\n    margin: `${grid}px ${grid}px ${grid}px ${grid}px`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? 'grey' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? 'lightgrey' : 'lightgrey',\r\n    padding: grid,\r\n    width: 250\r\n});\r\n\r\nclass test extends React.Component {\r\n    state = {\r\n        items: treeList(3),\r\n        //selected: extension[4][4]\r\n        selected: groundList(8),\r\n        //extension: extensionList(4)\r\n    };\r\n\r\n    id2List = {\r\n        droppable: 'items',\r\n        droppable2: 'selected',\r\n        //droppable3: 'extension'\r\n\r\n    };\r\n\r\n    getList = id => this.state[this.id2List[id]];\r\n  \r\n    onDragEnd = result => {\r\n        const { source, destination } = result;\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        //ÏûêÍ∏∞ ÏûêÏã†ÏúºÎ°ú ÏõÄÏßÅÏù¥Îäî Í≤ΩÏö∞ \r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(this.getList(source.droppableId),source.index,destination.index);\r\n            let state = { items };\r\n            const newState = [state]\r\n            newState[source.droppableId] = items;\r\n            this.setState(newState)\r\n            \r\n            //this.setState(state);\r\n            // //Î™®Î•¥Í≤†Ïùå\r\n            // if (source.droppableId === 'droppable2') {\r\n            //     state = { selected: items };\r\n            // }\r\n\r\n        } else {\r\n            //ÏõÄÏßÅÏù∏ ÏÉÅÌÉú Í≤∞Í≥º Í∞í \r\n            const result = move(this.getList(source.droppableId),this.getList(destination.droppableId),source,destination);\r\n            //this.setState({items: result.droppable, selected: result.droppable2//, extension = result.droppable3\r\n            const newState = [this.state.selected]\r\n            newState[source.droppableId] = result[source.droppableId];\r\n            newState[destination.droppableId] = result[destination.droppableId]\r\n            this.setState(newState.filter(group => group.length))\r\n            \r\n            }\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button type = \"button\" onClick ={() => {this.setState([this.state.selected,[]]);}} >add new group</button>\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div class = \"droppable\">\r\n                <Droppable droppableId=\"droppable\" direction = \"horizontal\">\r\n                    {(provided, snapshot) => (\r\n                        <div \r\n                            ref={provided.innerRef}\r\n                            \r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                                <p>tree</p>\r\n                                <div class = \"item\">\r\n                            {this.state.items.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div \r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            \r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            </div>\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                </div>\r\n                <div className = \"droppable2\">\r\n                <Droppable droppableId=\"droppable2\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            \r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                                <p>garden</p>\r\n                                <div className = \"item\">\r\n                            {this.state.selected.map((item, index) => (\r\n            \r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            \r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            </div>\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                </div>\r\n                <div className = \"div2\">\r\n                {/* <Droppable droppableId=\"droppable3\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                            {this.state.extension.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable> */}\r\n                </div>\r\n            </DragDropContext>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default test;\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\TreeList.js",["169","170"],"import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\"];\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n    \r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    //id: tree [k+ offset],//-new Date().getTime(),\r\n    id:  `item-${k + offset}-${new Date().getTime()}`,\r\n    content: tree [k+ offset] \r\n    //content: `item ${k + offset}`\r\n  }));\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nfunction TreeList() {\r\n  const [state, setState] = useState([getItems(3)])\r\n  //= useState([getItems(3), getItems(5, 10)]);\r\n\r\n  function onDragEnd(result) {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n\r\n    if (sInd === dInd) {\r\n      const items = reorder(state[sInd], source.index, destination.index);\r\n      const newState = [...state];\r\n      newState[sInd] = items;\r\n      setState(newState);\r\n    } else {\r\n      const result = move(state[sInd], state[dInd], source, destination);\r\n      const newState = [...state];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setState(newState.filter(group => group.length));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       {/* <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, []]);\r\n        }}\r\n      >\r\n        Add new group\r\n      </button> \r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, getItems(1)]);\r\n        }}\r\n      >\r\n        Add new item\r\n      </button>  */}\r\n      <div style={{ display: \"flex\" }}>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {state.map((el, ind) => (\r\n            <Droppable key={ind} droppableId={`${ind}`}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  style={getListStyle(snapshot.isDraggingOver)}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {el.map((item, index) => (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}\r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-around\"\r\n                            }}\r\n                          >\r\n                            {item.content}\r\n                            {/* <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                const newState = [...state];\r\n                                newState[ind].splice(index, 1);\r\n                                setState(\r\n                                  newState.filter(group => group.length)\r\n                                );\r\n                              }}\r\n                            >\r\n                              delete\r\n                            </button> */}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeList;\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Tree.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\SetTimer.js",["171","172"],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Dialog.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Task.jsx",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUpForm.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\validate.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\PasswordStr.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyTree.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":15},{"ruleId":"177","severity":1,"message":"181","line":10,"column":8,"nodeType":"179","messageId":"180","endLine":10,"endColumn":13},{"ruleId":"177","severity":1,"message":"182","line":11,"column":8,"nodeType":"179","messageId":"180","endLine":11,"endColumn":12},{"ruleId":"177","severity":1,"message":"183","line":1,"column":16,"nodeType":"179","messageId":"180","endLine":1,"endColumn":20},{"ruleId":"177","severity":1,"message":"184","line":2,"column":9,"nodeType":"179","messageId":"180","endLine":2,"endColumn":12},{"ruleId":"177","severity":1,"message":"185","line":2,"column":14,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"186","line":2,"column":19,"nodeType":"179","messageId":"180","endLine":2,"endColumn":28},{"ruleId":"187","severity":1,"message":"188","line":20,"column":4,"nodeType":"189","endLine":20,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":11,"column":14,"nodeType":"192","messageId":"193","endLine":11,"endColumn":30,"fix":"194"},{"ruleId":"187","severity":1,"message":"188","line":6,"column":9,"nodeType":"189","endLine":6,"endColumn":48},{"ruleId":"177","severity":1,"message":"195","line":11,"column":9,"nodeType":"179","messageId":"180","endLine":11,"endColumn":17},{"ruleId":"177","severity":1,"message":"196","line":1,"column":16,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"197","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":16},{"ruleId":"177","severity":1,"message":"198","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"177","severity":1,"message":"199","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"177","severity":1,"message":"200","line":5,"column":10,"nodeType":"179","messageId":"180","endLine":5,"endColumn":16},{"ruleId":"177","severity":1,"message":"201","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"202","line":8,"column":8,"nodeType":"179","messageId":"180","endLine":8,"endColumn":14},{"ruleId":"177","severity":1,"message":"181","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":13},{"ruleId":"177","severity":1,"message":"203","line":11,"column":8,"nodeType":"179","messageId":"180","endLine":11,"endColumn":12},{"ruleId":"177","severity":1,"message":"204","line":12,"column":10,"nodeType":"179","messageId":"180","endLine":12,"endColumn":35},{"ruleId":"205","severity":1,"message":"206","line":61,"column":7,"nodeType":"192","endLine":61,"endColumn":36},{"ruleId":"187","severity":1,"message":"188","line":211,"column":11,"nodeType":"189","endLine":211,"endColumn":70},{"ruleId":"187","severity":1,"message":"188","line":214,"column":11,"nodeType":"189","endLine":214,"endColumn":190},{"ruleId":"187","severity":1,"message":"188","line":217,"column":11,"nodeType":"189","endLine":217,"endColumn":35},{"ruleId":"187","severity":1,"message":"188","line":220,"column":11,"nodeType":"189","endLine":220,"endColumn":31},{"ruleId":"187","severity":1,"message":"188","line":223,"column":11,"nodeType":"189","endLine":223,"endColumn":35},{"ruleId":"177","severity":1,"message":"182","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":12},{"ruleId":"177","severity":1,"message":"207","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":16},{"ruleId":"177","severity":1,"message":"208","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":12},{"ruleId":"177","severity":1,"message":"209","line":8,"column":8,"nodeType":"179","messageId":"180","endLine":8,"endColumn":12},{"ruleId":"177","severity":1,"message":"210","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":10},{"ruleId":"177","severity":1,"message":"211","line":10,"column":8,"nodeType":"179","messageId":"180","endLine":10,"endColumn":14},{"ruleId":"177","severity":1,"message":"212","line":11,"column":8,"nodeType":"179","messageId":"180","endLine":11,"endColumn":13},{"ruleId":"177","severity":1,"message":"200","line":12,"column":10,"nodeType":"179","messageId":"180","endLine":12,"endColumn":16},{"ruleId":"177","severity":1,"message":"213","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},{"ruleId":"177","severity":1,"message":"214","line":2,"column":13,"nodeType":"179","messageId":"180","endLine":2,"endColumn":20},{"ruleId":"177","severity":1,"message":"215","line":3,"column":13,"nodeType":"179","messageId":"180","endLine":3,"endColumn":20},{"ruleId":"177","severity":1,"message":"216","line":4,"column":13,"nodeType":"179","messageId":"180","endLine":4,"endColumn":20},{"ruleId":"177","severity":1,"message":"196","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"217","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"196","line":1,"column":28,"nodeType":"179","messageId":"180","endLine":1,"endColumn":37},{"ruleId":"177","severity":1,"message":"196","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":31,"column":18,"nodeType":"192","messageId":"193","endLine":31,"endColumn":34,"fix":"218"},{"ruleId":"190","severity":1,"message":"191","line":37,"column":18,"nodeType":"192","messageId":"193","endLine":37,"endColumn":36,"fix":"219"},{"ruleId":"177","severity":1,"message":"197","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":12,"column":14,"nodeType":"192","messageId":"193","endLine":12,"endColumn":30,"fix":"220"},{"ruleId":"177","severity":1,"message":"221","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":27},{"ruleId":"177","severity":1,"message":"222","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":12},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'Grid' is defined but never used.","'Text' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property k+ offset.","MemberExpression","unexpectedWhitespace",{"range":"225","text":"226"},"'nameText' is assigned a value but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'Popup' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'Dialog' is defined but never used.","'Fade' is defined but never used.","'CommunicationSpeakerPhone' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","'TreeList' is defined but never used.","'Test' is defined but never used.","'Tree' is defined but never used.","'My' is defined but never used.","'Ground' is defined but never used.","'grass' is defined but never used.","'React' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'IoIcons' is defined but never used.","'PropTypes' is defined but never used.",{"range":"227","text":"226"},{"range":"228","text":"226"},{"range":"229","text":"226"},"'ImageExposureZero' is defined but never used.","'Home' is defined but never used.","no-global-assign","no-unsafe-negation",[487,488],"",[1073,1074],[1257,1258],[446,447]]
=======
<<<<<<< HEAD
[{"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\index.js":"1","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\App.js":"2","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Navbar.js":"3","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Home.js":"4","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Profile.js":"5","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\MyGarden.js":"6","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\TreeColumn.js":"7","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Grid.js":"8","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\MyProfile.js":"9","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Login.js":"10","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\SignUp.js":"11","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Column.jsx":"12","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\SidebarData.js":"13","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\initial-data.js":"14","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Timer.js":"15","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\DoneDialog.js":"16","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\SetTimer.js":"17","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\TreeList.js":"18","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Tree.js":"19","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Dialog.js":"20","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Test.js":"21","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\MyTree.js":"22","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\SignUpContainer.js":"23","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Task.jsx":"24","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\SignUpForm.js":"25","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\validate.js":"26","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\PasswordStr.js":"27"},{"size":186,"mtime":1611064502846,"results":"28","hashOfConfig":"29"},{"size":927,"mtime":1611064502827,"results":"30","hashOfConfig":"29"},{"size":1551,"mtime":1611064502841,"results":"31","hashOfConfig":"29"},{"size":8130,"mtime":1611068609636,"results":"32","hashOfConfig":"29"},{"size":773,"mtime":1611064502849,"results":"33","hashOfConfig":"29"},{"size":1809,"mtime":1611064502848,"results":"34","hashOfConfig":"29"},{"size":1529,"mtime":1611064502851,"results":"35","hashOfConfig":"29"},{"size":4324,"mtime":1611064502847,"results":"36","hashOfConfig":"29"},{"size":5011,"mtime":1611064502849,"results":"37","hashOfConfig":"29"},{"size":3986,"mtime":1611071203734,"results":"38","hashOfConfig":"29"},{"size":646,"mtime":1611069212416,"results":"39","hashOfConfig":"29"},{"size":2419,"mtime":1611064502828,"results":"40","hashOfConfig":"29"},{"size":604,"mtime":1611064502842,"results":"41","hashOfConfig":"29"},{"size":1129,"mtime":1611064502846,"results":"42","hashOfConfig":"29"},{"size":2852,"mtime":1611064502850,"results":"43","hashOfConfig":"29"},{"size":1948,"mtime":1611064502847,"results":"44","hashOfConfig":"29"},{"size":4099,"mtime":1611064502850,"results":"45","hashOfConfig":"29"},{"size":5273,"mtime":1611064502851,"results":"46","hashOfConfig":"29"},{"size":94,"mtime":1611064502851,"results":"47","hashOfConfig":"29"},{"size":2732,"mtime":1611064502846,"results":"48","hashOfConfig":"29"},{"size":10587,"mtime":1611064502850,"results":"49","hashOfConfig":"29"},{"size":1139,"mtime":1611064502849,"results":"50","hashOfConfig":"29"},{"size":3376,"mtime":1611069370224,"results":"51","hashOfConfig":"29"},{"size":1750,"mtime":1611064502844,"results":"52","hashOfConfig":"29"},{"size":2184,"mtime":1611069280045,"results":"53","hashOfConfig":"29"},{"size":2143,"mtime":1611064502844,"results":"54","hashOfConfig":"29"},{"size":840,"mtime":1611064502842,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"76pytm",{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\index.js",[],["123","124"],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\App.js",["125","126","127"],"import React from 'react';\r\nimport './style/App.css';\r\nimport Navbar from './Navbar';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Profile from './route/Profile';\r\nimport MyGarden from './route/MyGarden';\r\nimport Home from './route/Home'\r\nimport SignUp from './Sign/SignUp'\r\nimport Timer from './route/TreeColumn'\r\nimport Grid from './route/Grid'\r\nimport Login from './route/Login'\r\nimport MyProfile from './route/MyProfile'\r\n\r\n\r\nclass App extends React.Component {\r\n  render(){\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/signup' exact component={SignUp} />\r\n        <Route path='/login' exact component={Login} />\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/profile' component={MyProfile} />\r\n        <Route path='/mygarden' component={MyGarden} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Navbar.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Home.js",["128","129","130","131","132","133","134","135"],"import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport initialData from \"../initial-data\";\r\nimport Column from '../Column.jsx';\r\nimport '../style/Home.css';\r\nimport '../style/SetTimer.css';\r\nimport Dialog from \"./DoneDialog\";\r\nimport Timer from \"./Timer\";\r\nimport SetTimer from \"./SetTimer\";\r\nimport Fade from '@material-ui/core/Fade'\r\nimport { CommunicationSpeakerPhone } from \"material-ui/svg-icons\";\r\n\r\n// Styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\n// let flowers = [];\r\nclass Home extends React.Component {\r\n  state = initialData; //initialDataÎäî ÏßÄÍ∏àÏùÄ Îî∞Î°ú ÌååÏùºÏóêÏÑú ÌïòÎìúÏΩîÎî©Ìïú ÏÉÅÌÉú. Ïù¥Ï†ú DBÏóêÏÑú Ïñ¥ÏºÄ Î∂ÄÎ•ºÏßÄ Î∞©Î≤ïÏùÑ Ï∞æÏïÑÎ≥¥Ïûê.\r\n\r\n  // ÎìúÎûòÍ∑∏Í∞Ä ÏãúÏûëÎêòÎ©¥\r\n  onDragStart = (startColumn, provided) => {\r\n    document.body.style.transition = 'background-color 0.2s ease';\r\n  }\r\n  // ÎìúÎûòÍ∑∏Î•º Ìï¥ÏÑú ÏÉÅÌô©Ïù¥ ÏóÖÎç∞Ïù¥Ìä∏ÎêòÎ©¥\r\n  onDragUpdate = update => {\r\n    const { destination } = update;\r\n    const opacity = destination ?\r\n      destination.index / Object.keys(this.state.tasks).length\r\n      : 0;\r\n    document.body.style.backgroundColor = `rgba(153,  141, 217, ${opacity})`;\r\n  }\r\n  //Îî± ÎìúÎ°≠ÌñàÏùÑ ÎïåÍ∞Ä ÎêòÎ©¥\r\n  onDragEnd = result => {\r\n    document.body.style.color = 'inherit';\r\n    document.body.style.backgroundColor = 'inherit';\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    // TaskÍ∞Ä ÏòÆÍ≤®Ï°åÏùÑ Îïå Ï≤òÎ¶¨ÌïòÍ∏∞\r\n    if (!destination) { // 1. ÏïÑÏòà Ïù¥ÏÉÅÌïú Î∞îÍπ• Í≥≥Ïóê ÎÜìÏïòÏùÑ Í≤ΩÏö∞\r\n      return;\r\n    }\r\n    if ( // 2. Ïù¥Ï†Ñ ÏúÑÏπòÏôÄ Í∞ôÏùÄ Í≥≥Ïóê ÎÜìÏïòÏùÑ Í≤ΩÏö∞\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // 3. TaskÍ∞Ä Done ÏπºÎüºÏúºÎ°ú ÏòÆÍ≤®Ï°åÏùÑ Í≤ΩÏö∞\r\n    if (destination.droppableId === 'column-3') {\r\n\r\n      const item = \"üåû\";\r\n      this.state.tasks[draggableId].isDone = true; // Ìï¥Îãπ TaskÎ•º disableDraggable ÌïúÎã§\r\n      //showItem(item);\r\n    }\r\n    // showItem(item)=() =>{\r\n    //   <div>\r\n    //   <Fade in={true} timeout={4000}>\r\n    //     <p>True Component</p>\r\n    //   </Fade>\r\n\r\n    //   <Fade in={false} timeout={4000}>\r\n    //     <p>False Component</p>\r\n    //   </Fade>\r\n    //   </div>\r\n    //   // return <Fade className=\"fade-in\" timeout = {2000}> itemcreate {console.log(\"fade in\")} </Fade>\r\n    // }\r\n\r\n\r\n    // Ïó¨Í∏∞ÏÑú Ïû†Íπê... Column ÏûêÏ≤¥Í∞Ä ÏòÆÍ≤®Ï°åÏùÑ Îïå Ï≤òÎ¶¨ÌïòÍ∏∞\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const startColumn = this.state.columns[source.droppableId];\r\n    const finishColumn = this.state.columns[destination.droppableId];\r\n    \r\n    // 4. persist reordering of task that has been moved within a list\r\n    // 4. TaskÍ∞Ä Column ÎÇ¥ÏóêÏÑú ÏòÆÍ≤®Ï°åÏùÑ Îïå Í∑∏ ÏòÆÍ≤®ÏßÑ ÏûêÎ¶¨Í∞Ä Ïú†ÏßÄÎêòÎèÑÎ°ù Ï≤òÎ¶¨ÌïòÍ∏∞\r\n    if (startColumn === finishColumn) {\r\n      const newTaskIds = Array.from(startColumn.taskIds);\r\n      newTaskIds.splice(source.index, 1); // Ïö∞ÏÑ† ÏòÆÍ≤®Ïßê ÎãπÌïú TaskÎ•º ÏõêÎûò ÏûêÎ¶¨ÏóêÏÑú ÏóÜÏï†Í≥†\r\n      newTaskIds.splice(destination.index, 0, draggableId); // ÏòÆÍ∏¥ ÌõÑÏùò Í∑∏ ÏûêÎ¶¨Ïóê ÎÅºÏõåÎÑ£ÎäîÎã§\r\n\r\n      const newColumn = { // Column ÎÇ¥ TaskÎì§ Í∞±Ïã†\r\n        ...startColumn,\r\n        taskIds: newTaskIds\r\n      };\r\n      const newState = { // Column Í∞±Ïã†\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newColumn.id]: newColumn\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // 5. persist reordering of task that has been moved from one list to another\r\n    // 5. TaskÍ∞Ä Column ÎÑàÎ®∏ ÏòÆÍ≤®Ï°åÏùÑ Îïå Í∑∏ ÏòÆÍ≤®ÏßÑ ÏûêÎ¶¨Í∞Ä Ïú†ÏßÄÎêòÎèÑÎ°ù Ï≤òÎ¶¨ÌïòÍ∏∞\r\n    const startTaskIds = Array.from(startColumn.taskIds);\r\n    startTaskIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...startColumn,\r\n      taskIds: startTaskIds\r\n    };\r\n    const finishTaskIds = Array.from(finishColumn.taskIds);\r\n    finishTaskIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finishColumn,\r\n      taskIds: finishTaskIds\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    }\r\n    this.setState(newState)\r\n    \r\n    console.log(\"Todo is \"+newState.columns[\"column-1\"].taskIds);\r\n    console.log(\"In Progress is \"+newState.columns[\"column-2\"].taskIds);\r\n    \r\n    // 6. TaskÍ∞Ä Column ÎÑàÎ®∏ ÏòÆÍ≤®Ï°åÏùÑ Îïå, Ïù¥Ï†ú ÎçîÏù¥ÏÉÅ To-do, In Progress ColumnÏóê ÏïÑÎ¨¥ Í≤ÉÎèÑ ÏóÜÏùÑ Í≤ΩÏö∞(Ï¶â Ï†ÑÎ∂Ä DoneÏπºÎüºÏúºÎ°ú ÏòÆÍ≤®Ï°åÏùÑ Í≤ΩÏö∞)\r\n    const toDoIsNotEmpty = newState.columns[\"column-1\"].taskIds.length;\r\n    const InProgressIsNotEmpty = newState.columns[\"column-2\"].taskIds.length;\r\n    const FLOWERS = [\"üåπ\",\"üå∫\",\"üåª\",\"üåº\",\"üå∑\",\"üçÄ\",\"üåµ\"];\r\n    const FLOWER_COUNT = 7;\r\n    const LS_KEY_FLOWERS = \"flowers\";\r\n\r\n    if (!toDoIsNotEmpty && !InProgressIsNotEmpty) {\r\n      const randomIndex = Math.floor(Math.random() * FLOWER_COUNT);\r\n      const theFlower = FLOWERS[randomIndex];\r\n      alert(`Congratulations!\\nYou've got your Flower:\\n${theFlower}`);\r\n\r\n      let currentFlowersString = getFlower();\r\n      if (!currentFlowersString){ // localÏóê ÏïÑÎ¨¥Í≤ÉÎèÑ ÏóÜÏùå\r\n        currentFlowersString = theFlower;\r\n      }\r\n      else\r\n      currentFlowersString += (\",\"+theFlower);\r\n      // console.log(currentFlowersString);\r\n\r\n      saveFlower(currentFlowersString);\r\n    }\r\n    function getFlower(){\r\n      return localStorage.getItem(LS_KEY_FLOWERS);\r\n    }\r\n    function saveFlower(flowers){\r\n      \r\n      localStorage.setItem(LS_KEY_FLOWERS, flowers);\r\n    }\r\n\r\n    // TODO: Í∑∏Î¶¨Í≥† Ïù¥Î†áÍ≤å reorderÎêú indexÍ∞íÎì§ÏùÑ ÎîîÎπÑÏóê Ï†ÄÏû•Ìï¥Ïïº refreshÌñàÏùÑ ÎïåÎèÑ Ïú†ÏßÄÎê† Ïàò ÏûàÎäîÎç∞, Ïñ¥ÎñªÍ≤å ÌïòÏßÄ?\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <SetTimer\r\n        toDoIsNotEmpty={this.state.columns[\"column-1\"].taskIds.length}\r\n        InProgressIsNotEmpty={this.state.columns[\"column-2\"].taskIds.length}\r\n      />\r\n      {/* <div className=\"home\"> */}\r\n        <div className=\"toDoContainer\">\r\n          <DragDropContext\r\n          onDragEnd={this.onDragEnd}\r\n          onDragStart={this.onDragStart}\r\n          onDragUpdate={this.onDragUpdate}\r\n          >\r\n            <Droppable\r\n              droppableId=\"all-columns\"\r\n              direction=\"horizontal\"\r\n              type=\"column\"\r\n            >\r\n              {provided => (\r\n                <Container\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                >\r\n                  {this.state.columnOrder.map((columnId, index) => {\r\n                    const column = this.state.columns[columnId];\r\n                    const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\r\n                    return <Column key={column.id} column={column} tasks={tasks} index={index} />;\r\n                  })}\r\n                  {provided.placeholder}\r\n                  \r\n                </Container>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n        <div className=\"budImageContainer\">\r\n          {/* <img src=\"https://www.pngrepo.com/png/169302/180/bud.png\"/> */}\r\n          {/* <img src=\"https://media0.giphy.com/media/QaTEfUroq5jMRWV2eB/source.gif\"></img> */}\r\n          {/* <img src =\"https://static1.squarespace.com/static/570e502c2eeb8122343cc237/58e68280e58c625ba892f340/5b031bfe03ce64928f499172/1528030851667/fruitblossom.gif?format=1500w\"></img> */}\r\n         <img src =\"https://media1.giphy.com/media/1yTgqsdYPFw4Oqly5T/giphy.gif\"></img>\r\n        </div>\r\n      {/* </div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Profile.js",["136","137","138","139","140"],"import React, {Text} from \"react\";\r\nimport {Row, Col, Container} from \"react-bootstrap\"\r\nimport img_woman from '../Image/woman.png';\r\n// import \"../style/Profile.css\"\r\nimport '../style/MyProfile.css';\r\nclass Profile extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  nickname: \"sojeong\",\r\n\t\t  password:\"1234\",\r\n\t\t  lifeCount:\"10\",\r\n\t\t  killCount:\"2\"\r\n\t\t  }  \r\n\t\t};\r\n\trender(){\r\n\treturn (\r\n\t\t<div className='Profile'>\r\n\t\t\t{/* <motion.div animate = {{scale:0.5}}/> */}\r\n\t\t\t<img src = {img_woman}/>\r\n\t\t\t<p>name : {this.state.nickname}</p>\r\n\t\t\t<p>PassWord : {this.state.password}</p>\r\n\t\t\t<p>plant count : {this.state.lifeCount}</p>\r\n\t\t\t<p>dead plant count : {this.state.killCount}</p>\r\n\r\n\t\t</div>\r\n\r\n\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Profile;","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\MyGarden.js",["141","142","143","144","145","146","147","148"],"import React from \"react\";\r\n// import { MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\n// import {Container, Col, Row, Button} from 'react-bootstrap';\r\nimport '../style/MyGarden.css'\r\nimport Grid from \"./Grid\"\r\nimport TreeList from \"./TreeList\"\r\nimport Test from \"./Test\"\r\nimport Tree from \"./Tree\"\r\nimport Ground from '../Image/ground1.png';\r\nimport grass from '../Image/grass1.png';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Dialog from \"./Dialog\";\r\nimport MyTree from \"./MyTree\"\r\n\r\nclass MyGarden extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: true,\r\n            itemFriends: [\"üåø\",\"üå≥\", \"üåµ\", \"üéÑ\", \"üå≤\",\"üå¥\", \"ü™µ\", \"üçÄ\", \"üå±\",\"üéç\",\"üçÉ\",\"üíê\",\"üå∑\", \"üå∏\", \"üå∫\", \"ü•Ä\",\"üåπ\", \"üåº\", \"üåª\",\"üåû\"]\r\n        \r\n\r\n        }\r\n    }\r\n    _showDialog() {\r\n        this.setState({showDialog: this.state.showDialog});\r\n    }\r\n\t_showItem() {\r\n        this.setState({item: this.state.itemFriends});\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='MyGarden'>\r\n                \r\n                {/* <img src = {Ground} className=\"img-garden\"/> */}\r\n                <div className=\"img-garden\"/>\r\n\t\t\t\t{/* {this._showDialog.bind(this)} */}\r\n                {/* {this._showItem.bind(this)} */}\r\n                <Dialog />\r\n                {/* <Button className='button' onClick={this._showDialog.bind(this)}> Show item </Button> */}\r\n                {/* <Dialog  show={this.state.showDialog} item = {this.state.item1}/> */}\r\n                {/* <Dialog  show={this.state.showDialog} item = {this.state.item2}/> */}\r\n                {/* <Dialog  show={this.state.showDialog} item = {this.state.item4}/>  */}\r\n           \r\n         \r\n\t\t\t </div>\r\n\r\n\t\t);\r\n\t}\r\n} \r\nexport default MyGarden;\r\n    \r\n\r\n\r\n","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\TreeColumn.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Grid.js",["149"],"import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"../style/grid.css\"\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\", \"üë©‚Äçü¶∞\", \"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\", \"üë©‚Äçü¶≥\", \"üë∏\"];\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    //id: tree [k+ offset],//-new Date().getTime(),\r\n    id:  `item-${k + offset}-${new Date().getTime()}`,\r\n    content: tree [k+ offset] \r\n    //content: `item ${k + offset}`\r\n  }));\r\n\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nfunction Grid (){\r\n  const [state, setState] = useState([getItems(3)])\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     items: getItems(10)\r\n  //   };\r\n  //   this.onDragEnd = this.onDragEnd.bind(this);\r\n  // }\r\nfunction onDragEnd(result) {\r\n    const { source, destination } = result;\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n    if (sInd === dInd) {\r\n      const items = reorder(state[sInd], source.index, destination.index);\r\n      const newState = [...state];\r\n      newState[sInd] = items;\r\n      setState(newState);\r\n    } else {\r\n      const result = move(state[sInd], state[dInd], source, destination);\r\n      const newState = [...state];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setState(newState.filter(group => group.length));\r\n    }\r\n    // const items = reorder(\r\n    //   this.state.items,\r\n    //   result.source.index,\r\n    //   result.destination.index\r\n    // );\r\n\r\n    // this.setState({\r\n    //   items\r\n    // });\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <div className = \"grid\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {item.content}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  \r\n}\r\n\r\nexport default Grid;\r\n","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\MyProfile.js",["150","151"],"import React from \"react\";\r\nimport '../style/MyProfile.css';\r\nconst ImgUpload =({onChange,src})=>\r\n<label htmlFor=\"photo-upload\" className=\"custom-file-upload fas\">\r\n      <div className=\"img-wrap img-upload\" >\r\n        <img htmlFor=\"photo-upload\" src={src}/>\r\n      </div>\r\n      <input id=\"photo-upload\" type=\"file\" onChange={onChange}/> \r\n    </label>\r\n\r\n  const nameText = localStorage.getItem(\"name\");\r\n  const passText = localStorage.getItem(\"pass\");\r\n  const emailText = localStorage.getItem(\"email\");\r\n\r\n  const Name =({onChange,value})=>\r\n  \r\n    <div className=\"field\">\r\n      <label htmlFor=\"name\"> name: </label>\r\n\r\n      {/* <h3>{nameText}</h3> */}\r\n      {/* <input id=\"name\" type=\"text\" onChange={onChange} maxLength=\"25\" value = \"hi\"/> */}\r\n    </div>\r\n  \r\n    \r\n  const Status =({onChange, valueColumncar})=>\r\n    <div className=\"field\">\r\n      <label htmlFor=\"status\">PASSWORD:</label>\r\n      <h3>{passText}</h3>\r\n      <input id=\"status\" type=\"text\" onChange={onChange}  maxLength=\"35\"  required/>\r\n    </div>\r\n\r\nconst Email =({onChange,valueColumncar})=>\r\n<div className=\"field\">\r\n  <label htmlFor=\"email\">EMAIL</label>\r\n <h3>{emailText}</h3>\r\n  <input id=\"email\" type=\"text\" onChange={onChange}  maxLength=\"35\"  required/>\r\n</div>\r\n\r\n  const KillCount =({onChange,valueColumncar})=>\r\n    <div className=\"field\">\r\n      <label htmlFor=\"killcount\">Kill Count </label>\r\n      <input id=\"killcount\" type=\"text\" onChange={onChange}  maxLength=\"35\"  required/>\r\n    </div>\r\n\r\n    const AllPlant =({onChange,valueColumncar})=>\r\n      <div className=\"field\">\r\n        <label htmlFor=\"AllPlant\"> All plant:</label>\r\n        <input  id=\"AllPlant\"  type=\"text\"   onChange={onChange} maxLength=\"35\"   required/>\r\n      </div>\r\n  \r\n  \r\n  const Profile =({\r\n    onSubmit,\r\n    src,\r\n    name,\r\n    status,\r\n    email,\r\n    KillCount,\r\n    AllPlant\r\n  })=>\r\n    <div className=\"card\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"name\">{name}</div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"email\">{email}</div>\r\n        <div className=\"KillCount\">{KillCount}</div>\r\n        <div className=\"AllPlant\">{AllPlant}</div>\r\n        <button type=\"save\" className=\"edit\">Edit Profile </button>\r\n      </form>\r\n    </div>\r\n       \r\n        \r\n  const Edit =({ onSubmit, children})=>\r\n    <div className=\"card\">\r\n      <form onSubmit={onSubmit}>\r\n          {children}\r\n        <button type=\"edit\" className=\"save\">edit </button>\r\n      </form>\r\n    </div>\r\n  \r\n  class MyProfile extends React.Component {\r\n    state = {\r\n      file: '',\r\n      imagePreviewUrl: 'https://github.com/OlgaKoplik/CodePen/blob/master/profile.jpg?raw=true',\r\n      name:'',\r\n      status:'',\r\n      email:'',\r\n      KillCount:'',\r\n      AllPlant:'',\r\n      active: 'edit'\r\n    }\r\n  \r\n    photoUpload = e =>{\r\n      e.preventDefault();\r\n      const reader = new FileReader();\r\n      const file = e.target.files[0];\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          file: file,\r\n          imagePreviewUrl: reader.result\r\n        });\r\n      }\r\n      reader.readAsDataURL(file);\r\n    }\r\n    editName = e =>{\r\n      const name = e.target.value;\r\n      this.setState({\r\n        name,\r\n      });\r\n    }\r\n    editEmail = e =>{\r\n      const email = e.target.value;\r\n      this.setState({\r\n        email,\r\n      });\r\n    }\r\n    \r\n    editStatus = e => {\r\n      const status = e.target.value;\r\n      this.setState({\r\n        status,\r\n      });\r\n    }\r\n    editKillCount = e => {\r\n      const KillCount = e.target.value;\r\n      this.setState({\r\n        KillCount,\r\n      });\r\n    }\r\n    editAllPlant = e => {\r\n      const AllPlant = e.target.value;\r\n      this.setState({\r\n        AllPlant,\r\n      });\r\n    }\r\n    \r\n    handleSubmit= e =>{\r\n      e.preventDefault();\r\n      let activeP = this.state.active === 'edit' ? 'profile' : 'edit';\r\n      this.setState({\r\n        active: activeP,\r\n      })\r\n    }\r\n    \r\n    render() {\r\n      const {imagePreviewUrl, \r\n             name, \r\n             status, email, killCount, allPlant,\r\n             active} = this.state;\r\n      return (\r\n        <div>\r\n          {(active === 'edit')?(\r\n            <Edit onSubmit={this.handleSubmit}>\r\n              <ImgUpload onChange={this.photoUpload} src={imagePreviewUrl}/>\r\n              <Name onChange={this.editName} value={name}/>\r\n              <Status onChange={this.editStatus} value={status}/>\r\n              <Email onChange={this.editEmail} value={email}/>\r\n              <KillCount onChange={this.editKillCount} value={killCount}/>\r\n              <AllPlant onChange={this.editAllPlant} value={allPlant}/>\r\n            </Edit>\r\n          ):(\r\n            <Profile \r\n              onSubmit={this.handleSubmit} \r\n              src={imagePreviewUrl} \r\n              name={name} \r\n              status={status}\r\n              email={email}\r\n              KillCount={KillCount}\r\n              AppPlant={AllPlant}/>)}\r\n          \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n export default MyProfile;","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Login.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\SignUp.js",["152","153","154","155","156","157"],"import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Popup from 'reactjs-popup'\r\nimport Modal from 'react-modal'\r\nimport { Button } from 'reactstrap';\r\nimport SignUpContainer from \"./SignUpContainer\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        // this.state = {name: \"hello\"};\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <MuiThemeProvider>\r\n            {/* {this.props.children} */}\r\n            <SignUpContainer/>\r\n        </MuiThemeProvider>\r\n    );\r\n    }\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Column.jsx",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\SidebarData.js",["158","159","160","161"],"import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: 'Home',\r\n    path: '/',\r\n    // icon: <AiIcons.AiFillHome />,\r\n    icon: \"üè°\",\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Profile',\r\n    path: '/profile',\r\n    // icon: <IoIcons.IoIosPaper />,\r\n    icon: \"üë©‚Äçüåæ\",\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'My Garden',\r\n    path: '/mygarden',\r\n    // icon: <FaIcons.FaCartPlus />,\r\n    icon: \"üå±\",\r\n    cName: 'nav-text'\r\n  }\r\n];","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\initial-data.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Timer.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\DoneDialog.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\SetTimer.js",["162","163"],"import { ImageExposureZero } from 'material-ui/svg-icons';\r\nimport React, { Component } from 'react';\r\nimport '../style/SetTimer.css';\r\nimport Home from \"./Home\";\r\n\r\nclass SetTimer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds:0,\r\n      isZero: false\r\n    }\r\n    this.hoursInput = React.createRef();\r\n    this.minutesInput= React.createRef();\r\n    this.secondsInput = React.createRef();\r\n  }\r\n\r\n  inputHandler = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  convertToSeconds = ( hours, minutes, seconds) => {\r\n    return seconds + minutes * 60 + hours * 60 * 60;\r\n  }\r\n\r\n  startTimer = () => {\r\n    this.timer = setInterval(this.countDown, 1000);\r\n    // Ïù∏ÌíãÏóê Ï†ÅÏùÄ Ïà´Ïûê ÏßÄÏö∞Í∏∞\r\n    const hoursInput = document.querySelector(\"input[name=hours]\");\r\n    const minutesInput = document.querySelector(\"input[name=minutes]\");\r\n    const secondsInput = document.querySelector(\"input[name=seconds]\");\r\n    hoursInput.value=\"\";\r\n    minutesInput.value=\"\";\r\n    secondsInput.value=\"\";\r\n  }\r\n\r\n\r\n  countDown = () => {\r\n    const  { hours, minutes, seconds } = this.state;\r\n    let c_seconds = this.convertToSeconds(hours, minutes, seconds);\r\n    if (!this.props.toDoIsNotEmpty && !this.props.InProgressIsNotEmpty){ // Ïö∞ÏÑ† Ìï†ÏùºÏùÑ Îã§ ÌïòÍ≤å ÎêòÎ©¥\r\n      this.stopTimer();\r\n    } else { // Ìï†Ïùº Îã§ ÏïàÌñàÏúºÎ©¥\r\n      if ( hours === 0 &&  minutes === 0 & seconds === 0){ // time over\r\n        alert(`ÏãúÍ∞Ñ ÎÇ¥Ïóê Ìï†ÏùºÏùÑ Îã§ Î™ªÌïòÏÖ®Íµ∞Ïöî... ÍΩÉÏù¥ Ï£ΩÏóàÏñ¥Ïöî„Ö†„Ö†`)\r\n      }\r\n    }\r\n    \r\n    if(c_seconds) {\r\n\r\n      // seconds change\r\n      seconds ? this.setState({seconds: seconds-1}) : this.setState({seconds: 59});\r\n\r\n      // minutes change\r\n      if(c_seconds % 60 === 0 && minutes) {\r\n        this.setState({minutes: minutes -1});\r\n      }\r\n\r\n      // when only hours entered\r\n      if(!minutes && hours) {\r\n        this.setState({minutes: 59});\r\n      }\r\n\r\n      // hours change\r\n      if(c_seconds % 3600 === 0 && hours) {\r\n        this.setState({hours: hours-1});\r\n      }\r\n\r\n    } else {\r\n      clearInterval(this.timer);\r\n    } \r\n  }\r\n\r\n  stopTimer = () => {\r\n    clearInterval(this.timer);\r\n    // alert(`ÍΩÉÏù¥ Ï£ΩÏóàÏñ¥Ïöî„Ö†„Ö†`);\r\n    // Ïù∏ÌíãÏóê Ï†ÅÏùÄ Ïà´Ïûê ÏßÄÏö∞Í∏∞\r\n    const hoursInput = document.querySelector(\"input[name=hours]\");\r\n    const minutesInput = document.querySelector(\"input[name=minutes]\");\r\n    const secondsInput = document.querySelector(\"input[name=seconds]\");\r\n    hoursInput.value=\"\";\r\n    minutesInput.value=\"\";\r\n    secondsInput.value=\"\";\r\n  }\r\n\r\n  resetTimer = () => {\r\n    this.setState({\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0\r\n    });\r\n    this.hoursInput.current.value = \"\";\r\n    this.minutesInput.current.value = \"\";\r\n    this.secondsInput.current.value = \"\";\r\n  }\r\n\r\n  render() {\r\n    const { hours, minutes, seconds } = this.state;\r\n\r\n    return (\r\n      <div className=\"SetTimer\">\r\n        <h3>TIMER</h3>\r\n\r\n        <div>\r\n          <input ref={this.hoursInput} type=\"number\" className=\"form-control input-lg\" placeholder={\"ÏãúÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî\"} name=\"hours\" onChange={this.inputHandler} />\r\n          <input ref={this.minutesInput} type=\"number\" className=\"form-control input-lg\" placeholder={\"Î∂ÑÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî\"} name=\"minutes\" onChange={this.inputHandler} />\r\n          <input ref={this.secondsInput} type=\"number\" className=\"form-control input-lg\" placeholder={\"Ï¥àÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî\"} name=\"seconds\" onChange={this.inputHandler} />\r\n        </div>\r\n        \r\n         <div>\r\n            <button onClick={this.startTimer} className=\"startBtn\">START</button>\r\n            <button onClick={this.stopTimer}  className=\"stopBtn\">STOP</button>\r\n            <button onClick={this.resetTimer}  className=\"resetBtn\">RESET</button>\r\n         </div>\r\n\r\n         <h4 className=\"timer-settimer\">ÎÇ®ÏùÄ ÏãúÍ∞Ñ</h4>\r\n         <h2>{hours<10? `0${hours}` : hours} : {minutes<10? `0${minutes}` : minutes} : {seconds<10? `0${seconds}` : seconds}</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SetTimer;","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\TreeList.js",["164","165"],"import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\"];\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n    \r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    //id: tree [k+ offset],//-new Date().getTime(),\r\n    id:  `item-${k + offset}-${new Date().getTime()}`,\r\n    content: tree [k+ offset] \r\n    //content: `item ${k + offset}`\r\n  }));\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nfunction TreeList() {\r\n  const [state, setState] = useState([getItems(3)])\r\n  //= useState([getItems(3), getItems(5, 10)]);\r\n\r\n  function onDragEnd(result) {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n\r\n    if (sInd === dInd) {\r\n      const items = reorder(state[sInd], source.index, destination.index);\r\n      const newState = [...state];\r\n      newState[sInd] = items;\r\n      setState(newState);\r\n    } else {\r\n      const result = move(state[sInd], state[dInd], source, destination);\r\n      const newState = [...state];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setState(newState.filter(group => group.length));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       {/* <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, []]);\r\n        }}\r\n      >\r\n        Add new group\r\n      </button> \r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, getItems(1)]);\r\n        }}\r\n      >\r\n        Add new item\r\n      </button>  */}\r\n      <div style={{ display: \"flex\" }}>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {state.map((el, ind) => (\r\n            <Droppable key={ind} droppableId={`${ind}`}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  style={getListStyle(snapshot.isDraggingOver)}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {el.map((item, index) => (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}\r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-around\"\r\n                            }}\r\n                          >\r\n                            {item.content}\r\n                            {/* <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                const newState = [...state];\r\n                                newState[ind].splice(index, 1);\r\n                                setState(\r\n                                  newState.filter(group => group.length)\r\n                                );\r\n                              }}\r\n                            >\r\n                              delete\r\n                            </button> */}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeList;\r\n","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Tree.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Dialog.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\Test.js",["166","167","168"],"import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport \"../style/Test.css\"\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\"];\r\nconst ground = [\"üéÖ\", \"üë©‚Äçüé§\", \"üëº\", \"üë©‚Äçü¶∞\",\"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\"]\r\n// const extension = [\"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\"]\r\n// [[\"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\"],\r\n//  [\"üë©‚Äçü¶≥\", \"üë∏\", \"üôÇ\",\"üò†\"],\r\n//  [\"üòî\",\"üòñ\",\"üôÅ\",\"ü§¨\"],\r\n//  [\"ü•∂\", \"üò¶\",\"ü§¢\", \"üòà\"]];\r\n\r\n// // fake data generator\r\n// const getItems = (count, offset = 0) =>\r\n//     Array.from({ length: count }, (v, k) => k).map(k => ({\r\n//         id: `item-${k + offset}`,\r\n//         content: `item ${k + offset}`\r\n//     }));\r\n// const groundList =(count, offset =0)=> \r\n// const array\r\n// (tree.map((items, index) => {\r\n//     {items.map((subItem, sIndex) =>{\r\n//         id: `item==${sIndex + offset}`,\r\n//         content: tree [sIndex + offset] \r\n//     })}\r\n// }))\r\n\r\n\r\nconst treeList = (count, offset = 0) =>\r\n    Array.from({length: count},(v, k) => k).map(k => ({\r\n        id: `item==${k + offset}`,\r\n        content: tree [k+ offset] \r\n    }))\r\n\r\nconst groundList = (count, offset = 0) =>\r\n    Array.from({length: count},(v, k) => k).map(k => ({\r\n        id: `ite==${k + offset}`,\r\n        content: ground [k+ offset] \r\n    }))\r\n\r\n// const extensionList = (count, offset = 0) =>\r\n// Array.from({length: count},(v, k) => k).map(k => ({\r\n//     id: `ite==${k + offset}`,\r\n//     content: extension [k+ offset] \r\n// }))\r\n\r\n\r\n// a little function to help us with reordering the result\r\n// const reorder = (list, startIndex, endIndex) => {\r\n//     const result = Array.from(list);\r\n//     const [removed] = result.splice(startIndex, 1);\r\n//     result.splice(endIndex, 0, removed);\r\n\r\n//     return result;\r\n// };\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    //source ÏõÄÏßÅÏù∏ Ï™ΩÏùò Î¶¨Ïä§Ìä∏, destClone Î™©Ï†ÅÏßÄ Ï™ΩÏùò Î¶¨Ïä§Ìä∏\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    console.log(sourceClone)\r\n    console.log(destClone)\r\n\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    //ÏòÆÍ≤®ÏßÑ ÏïÑÏù¥ÌÖú [removed]\r\n    console.log([removed])\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 20;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    padding: grid ,\r\n    margin: `${grid}px ${grid}px ${grid}px ${grid}px`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? 'grey' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? 'lightgrey' : 'lightgrey',\r\n    padding: grid,\r\n    width: 250\r\n});\r\n\r\nclass test extends React.Component {\r\n    state = {\r\n        items: treeList(3),\r\n        //selected: extension[4][4]\r\n        selected: groundList(8),\r\n        //extension: extensionList(4)\r\n    };\r\n\r\n    id2List = {\r\n        droppable: 'items',\r\n        droppable2: 'selected',\r\n        //droppable3: 'extension'\r\n\r\n    };\r\n\r\n    getList = id => this.state[this.id2List[id]];\r\n  \r\n    onDragEnd = result => {\r\n        const { source, destination } = result;\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        //ÏûêÍ∏∞ ÏûêÏã†ÏúºÎ°ú ÏõÄÏßÅÏù¥Îäî Í≤ΩÏö∞ \r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(this.getList(source.droppableId),source.index,destination.index);\r\n            let state = { items };\r\n            const newState = [state]\r\n            newState[source.droppableId] = items;\r\n            this.setState(newState)\r\n            \r\n            //this.setState(state);\r\n            // //Î™®Î•¥Í≤†Ïùå\r\n            // if (source.droppableId === 'droppable2') {\r\n            //     state = { selected: items };\r\n            // }\r\n\r\n        } else {\r\n            //ÏõÄÏßÅÏù∏ ÏÉÅÌÉú Í≤∞Í≥º Í∞í \r\n            const result = move(this.getList(source.droppableId),this.getList(destination.droppableId),source,destination);\r\n            //this.setState({items: result.droppable, selected: result.droppable2//, extension = result.droppable3\r\n            const newState = [this.state.selected]\r\n            newState[source.droppableId] = result[source.droppableId];\r\n            newState[destination.droppableId] = result[destination.droppableId]\r\n            this.setState(newState.filter(group => group.length))\r\n            \r\n            }\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button type = \"button\" onClick ={() => {this.setState([this.state.selected,[]]);}} >add new group</button>\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div class = \"droppable\">\r\n                <Droppable droppableId=\"droppable\" direction = \"horizontal\">\r\n                    {(provided, snapshot) => (\r\n                        <div \r\n                            ref={provided.innerRef}\r\n                            \r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                                <p>tree</p>\r\n                                <div class = \"item\">\r\n                            {this.state.items.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div \r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            \r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            </div>\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                </div>\r\n                <div className = \"droppable2\">\r\n                <Droppable droppableId=\"droppable2\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            \r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                                <p>garden</p>\r\n                                <div className = \"item\">\r\n                            {this.state.selected.map((item, index) => (\r\n            \r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            \r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            </div>\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                </div>\r\n                <div className = \"div2\">\r\n                {/* <Droppable droppableId=\"droppable3\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                            {this.state.extension.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable> */}\r\n                </div>\r\n            </DragDropContext>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default test;\r\n","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\route\\MyTree.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\SignUpContainer.js",["169"],"import React, { Component } from \"react\";\r\nimport SignUpForm from \"./SignUpForm.js\";\r\nconst axios = require(\"axios\");\r\nconst FormValidators = require(\"./validate\");\r\nconst validateSignUpForm = FormValidators.validateSignUpForm;\r\nconst zxcvbn = require(\"zxcvbn\");\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errors: {},\r\n      user: {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        pwconfirm: \"\"\r\n      },\r\n      btnTxt: \"show\",\r\n      type: \"password\",\r\n      score: \"0\"\r\n    };\r\n\r\n    this.pwMask = this.pwMask.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submitSignup = this.submitSignup.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.pwHandleChange = this.pwHandleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({\r\n      user\r\n    });\r\n  }\r\n\r\n  pwHandleChange(event) {\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({\r\n      user\r\n    });\r\n\r\n    if (event.target.value === \"\") {\r\n      this.setState((state) =>\r\n        Object.assign({}, state, {\r\n          score: \"null\"\r\n        })\r\n      );\r\n    } else {\r\n      var pw = zxcvbn(event.target.value);\r\n      this.setState((state) =>\r\n        Object.assign({}, state, {\r\n          score: pw.score + 1\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  submitSignup(user) {\r\n    var params = { username: user.usr, password: user.pw, email: user.email };\r\n    axios\r\n      .post(\"https://ouramazingserver.com/api/signup/submit\", params)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          localStorage.token = res.data.token;\r\n          localStorage.isAuthenticated = true;\r\n          window.location.reload();\r\n        } else {\r\n          this.setState({\r\n            errors: { message: res.data.message }\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Sign up data submit error: \", err);\r\n      });\r\n  }\r\n\r\n  validateForm(event) {\r\n    event.preventDefault();\r\n    var payload = validateSignUpForm(this.state.user);\r\n    if (payload.success) {\r\n      this.setState({\r\n        errors: {}\r\n      });\r\n      var user = {\r\n        usr: this.state.user.username,\r\n        pw: this.state.user.password,\r\n        email: this.state.user.email\r\n      };\r\n      this.submitSignup(user);\r\n    }\r\n     else {\r\n      const errors = payload.errors;\r\n      this.setState({\r\n        errors\r\n      });\r\n    }\r\n  }\r\n\r\n  pwMask(event) {\r\n    event.preventDefault();\r\n    this.setState((state) =>\r\n      Object.assign({}, state, {\r\n        type: this.state.type === \"password\" ? \"input\" : \"password\",\r\n        btnTxt: this.state.btnTxt === \"show\" ? \"hide\" : \"show\"\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignUpForm onSubmit={this.validateForm} onChange={this.handleChange} onPwChange={this.pwHandleChange} errors={this.state.errors} user={this.state.user} score={this.state.score} btnTxt={this.state.btnTxt} type={this.state.type} pwMask={this.pwMask}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpContainer;\r\n\r\n// module.exports = SignUpContainer;\r\n\r\n\r\n","C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Task.jsx",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\SignUpForm.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\validate.js",[],"C:\\Users\\q\\Documents\\final_repo\\madCamp_week3\\src\\Sign\\PasswordStr.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":15},{"ruleId":"174","severity":1,"message":"178","line":10,"column":8,"nodeType":"176","messageId":"177","endLine":10,"endColumn":13},{"ruleId":"174","severity":1,"message":"179","line":11,"column":8,"nodeType":"176","messageId":"177","endLine":11,"endColumn":12},{"ruleId":"174","severity":1,"message":"180","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"181","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":14},{"ruleId":"174","severity":1,"message":"178","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":13},{"ruleId":"174","severity":1,"message":"182","line":11,"column":8,"nodeType":"176","messageId":"177","endLine":11,"endColumn":12},{"ruleId":"174","severity":1,"message":"183","line":12,"column":10,"nodeType":"176","messageId":"177","endLine":12,"endColumn":35},{"ruleId":"174","severity":1,"message":"184","line":55,"column":13,"nodeType":"176","messageId":"177","endLine":55,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":56,"column":7,"nodeType":"187","endLine":56,"endColumn":36},{"ruleId":"188","severity":1,"message":"189","line":215,"column":10,"nodeType":"190","endLine":215,"endColumn":82},{"ruleId":"174","severity":1,"message":"191","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":20},{"ruleId":"174","severity":1,"message":"192","line":2,"column":9,"nodeType":"176","messageId":"177","endLine":2,"endColumn":12},{"ruleId":"174","severity":1,"message":"193","line":2,"column":14,"nodeType":"176","messageId":"177","endLine":2,"endColumn":17},{"ruleId":"174","severity":1,"message":"194","line":2,"column":19,"nodeType":"176","messageId":"177","endLine":2,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":20,"column":4,"nodeType":"190","endLine":20,"endColumn":28},{"ruleId":"174","severity":1,"message":"179","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":12},{"ruleId":"174","severity":1,"message":"195","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":16},{"ruleId":"174","severity":1,"message":"196","line":7,"column":8,"nodeType":"176","messageId":"177","endLine":7,"endColumn":12},{"ruleId":"174","severity":1,"message":"197","line":8,"column":8,"nodeType":"176","messageId":"177","endLine":8,"endColumn":12},{"ruleId":"174","severity":1,"message":"198","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":14},{"ruleId":"174","severity":1,"message":"199","line":10,"column":8,"nodeType":"176","messageId":"177","endLine":10,"endColumn":13},{"ruleId":"174","severity":1,"message":"200","line":11,"column":10,"nodeType":"176","messageId":"177","endLine":11,"endColumn":16},{"ruleId":"174","severity":1,"message":"201","line":13,"column":8,"nodeType":"176","messageId":"177","endLine":13,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":11,"column":14,"nodeType":"187","messageId":"204","endLine":11,"endColumn":30,"fix":"205"},{"ruleId":"188","severity":1,"message":"189","line":6,"column":9,"nodeType":"190","endLine":6,"endColumn":48},{"ruleId":"174","severity":1,"message":"206","line":11,"column":9,"nodeType":"176","messageId":"177","endLine":11,"endColumn":17},{"ruleId":"174","severity":1,"message":"207","line":1,"column":16,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"208","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":16},{"ruleId":"174","severity":1,"message":"209","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":13},{"ruleId":"174","severity":1,"message":"210","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":13},{"ruleId":"174","severity":1,"message":"200","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":11,"column":5,"nodeType":"213","messageId":"214","endLine":14,"endColumn":6},{"ruleId":"174","severity":1,"message":"215","line":1,"column":8,"nodeType":"176","messageId":"177","endLine":1,"endColumn":13},{"ruleId":"174","severity":1,"message":"216","line":2,"column":13,"nodeType":"176","messageId":"177","endLine":2,"endColumn":20},{"ruleId":"174","severity":1,"message":"217","line":3,"column":13,"nodeType":"176","messageId":"177","endLine":3,"endColumn":20},{"ruleId":"174","severity":1,"message":"218","line":4,"column":13,"nodeType":"176","messageId":"177","endLine":4,"endColumn":20},{"ruleId":"174","severity":1,"message":"219","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":27},{"ruleId":"174","severity":1,"message":"220","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":12},{"ruleId":"174","severity":1,"message":"208","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":12,"column":14,"nodeType":"187","messageId":"204","endLine":12,"endColumn":30,"fix":"221"},{"ruleId":"174","severity":1,"message":"207","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"203","line":31,"column":18,"nodeType":"187","messageId":"204","endLine":31,"endColumn":34,"fix":"222"},{"ruleId":"202","severity":1,"message":"203","line":37,"column":18,"nodeType":"187","messageId":"204","endLine":37,"endColumn":36,"fix":"223"},{"ruleId":"174","severity":1,"message":"207","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'Grid' is defined but never used.","'useState' is defined but never used.","'Dialog' is defined but never used.","'Fade' is defined but never used.","'CommunicationSpeakerPhone' is defined but never used.","'item' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Text' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'TreeList' is defined but never used.","'Test' is defined but never used.","'Tree' is defined but never used.","'Ground' is defined but never used.","'grass' is defined but never used.","'Button' is defined but never used.","'MyTree' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property k+ offset.","unexpectedWhitespace",{"range":"226","text":"227"},"'nameText' is assigned a value but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'Popup' is defined but never used.","'Modal' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'React' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'IoIcons' is defined but never used.","'ImageExposureZero' is defined but never used.","'Home' is defined but never used.",{"range":"228","text":"227"},{"range":"229","text":"227"},{"range":"230","text":"227"},"no-global-assign","no-unsafe-negation",[487,488],"",[446,447],[1073,1074],[1257,1258]]
=======
[{"C:\\Users\\q\\MadCampWeek3-test2\\src\\index.js":"1","C:\\Users\\q\\MadCampWeek3-test2\\src\\App.js":"2","C:\\Users\\q\\MadCampWeek3-test2\\src\\Navbar.js":"3","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Profile.js":"4","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\TreeColumn.js":"5","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Login.js":"6","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Grid.js":"7","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyProfile.js":"8","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUp.js":"9","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Home.js":"10","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyGarden.js":"11","C:\\Users\\q\\MadCampWeek3-test2\\src\\SidebarData.js":"12","C:\\Users\\q\\MadCampWeek3-test2\\src\\Column.jsx":"13","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUpContainer.js":"14","C:\\Users\\q\\MadCampWeek3-test2\\src\\initial-data.js":"15","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\DoneDialog.js":"16","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Timer.js":"17","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Test.js":"18","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\TreeList.js":"19","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Tree.js":"20","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\SetTimer.js":"21","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Dialog.js":"22","C:\\Users\\q\\MadCampWeek3-test2\\src\\Task.jsx":"23","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUpForm.js":"24","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\validate.js":"25","C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\PasswordStr.js":"26","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyTree.js":"27"},{"size":186,"mtime":1610980055737,"results":"28","hashOfConfig":"29"},{"size":927,"mtime":1611063242328,"results":"30","hashOfConfig":"29"},{"size":1551,"mtime":1610980055734,"results":"31","hashOfConfig":"29"},{"size":773,"mtime":1610980055741,"results":"32","hashOfConfig":"29"},{"size":1529,"mtime":1610980055743,"results":"33","hashOfConfig":"29"},{"size":3153,"mtime":1611063242334,"results":"34","hashOfConfig":"29"},{"size":4324,"mtime":1610980055739,"results":"35","hashOfConfig":"29"},{"size":5011,"mtime":1611063340325,"results":"36","hashOfConfig":"29"},{"size":635,"mtime":1610995057238,"results":"37","hashOfConfig":"29"},{"size":7739,"mtime":1611063275407,"results":"38","hashOfConfig":"29"},{"size":1809,"mtime":1611063242335,"results":"39","hashOfConfig":"29"},{"size":604,"mtime":1610980055734,"results":"40","hashOfConfig":"29"},{"size":2419,"mtime":1611032368819,"results":"41","hashOfConfig":"29"},{"size":3386,"mtime":1611032205067,"results":"42","hashOfConfig":"29"},{"size":1129,"mtime":1611040696747,"results":"43","hashOfConfig":"29"},{"size":1948,"mtime":1610980055738,"results":"44","hashOfConfig":"29"},{"size":2852,"mtime":1611063242337,"results":"45","hashOfConfig":"29"},{"size":10587,"mtime":1610980055742,"results":"46","hashOfConfig":"29"},{"size":5273,"mtime":1610980055744,"results":"47","hashOfConfig":"29"},{"size":94,"mtime":1610980055743,"results":"48","hashOfConfig":"29"},{"size":4099,"mtime":1611063242351,"results":"49","hashOfConfig":"29"},{"size":2732,"mtime":1611063242333,"results":"50","hashOfConfig":"29"},{"size":1750,"mtime":1611063451198,"results":"51","hashOfConfig":"29"},{"size":2061,"mtime":1611063242330,"results":"52","hashOfConfig":"29"},{"size":2143,"mtime":1610984140176,"results":"53","hashOfConfig":"29"},{"size":840,"mtime":1610980055735,"results":"54","hashOfConfig":"29"},{"size":1139,"mtime":1611063242336,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"ka4wwl",{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\q\\MadCampWeek3-test2\\src\\index.js",[],["121","122"],"C:\\Users\\q\\MadCampWeek3-test2\\src\\App.js",["123","124","125"],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Navbar.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Profile.js",["126","127","128","129","130"],"import React, {Text} from \"react\";\r\nimport {Row, Col, Container} from \"react-bootstrap\"\r\nimport img_woman from '../Image/woman.png';\r\n// import \"../style/Profile.css\"\r\nimport '../style/MyProfile.css';\r\nclass Profile extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  nickname: \"sojeong\",\r\n\t\t  password:\"1234\",\r\n\t\t  lifeCount:\"10\",\r\n\t\t  killCount:\"2\"\r\n\t\t  }  \r\n\t\t};\r\n\trender(){\r\n\treturn (\r\n\t\t<div className='Profile'>\r\n\t\t\t{/* <motion.div animate = {{scale:0.5}}/> */}\r\n\t\t\t<img src = {img_woman}/>\r\n\t\t\t<p>name : {this.state.nickname}</p>\r\n\t\t\t<p>PassWord : {this.state.password}</p>\r\n\t\t\t<p>plant count : {this.state.lifeCount}</p>\r\n\t\t\t<p>dead plant count : {this.state.killCount}</p>\r\n\r\n\t\t</div>\r\n\r\n\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Profile;","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\TreeColumn.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Login.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Grid.js",["131"],"import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport \"../style/grid.css\"\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\", \"üë©‚Äçü¶∞\", \"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\", \"üë©‚Äçü¶≥\", \"üë∏\"];\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    //id: tree [k+ offset],//-new Date().getTime(),\r\n    id:  `item-${k + offset}-${new Date().getTime()}`,\r\n    content: tree [k+ offset] \r\n    //content: `item ${k + offset}`\r\n  }));\r\n\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nfunction Grid (){\r\n  const [state, setState] = useState([getItems(3)])\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     items: getItems(10)\r\n  //   };\r\n  //   this.onDragEnd = this.onDragEnd.bind(this);\r\n  // }\r\nfunction onDragEnd(result) {\r\n    const { source, destination } = result;\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n    if (sInd === dInd) {\r\n      const items = reorder(state[sInd], source.index, destination.index);\r\n      const newState = [...state];\r\n      newState[sInd] = items;\r\n      setState(newState);\r\n    } else {\r\n      const result = move(state[sInd], state[dInd], source, destination);\r\n      const newState = [...state];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setState(newState.filter(group => group.length));\r\n    }\r\n    // const items = reorder(\r\n    //   this.state.items,\r\n    //   result.source.index,\r\n    //   result.destination.index\r\n    // );\r\n\r\n    // this.setState({\r\n    //   items\r\n    // });\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <div className = \"grid\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {item.content}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  \r\n}\r\n\r\nexport default Grid;\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyProfile.js",["132","133"],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUp.js",["134","135","136","137","138"],"import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Popup from 'reactjs-popup'\r\nimport Modal from 'react-modal'\r\nimport { Button } from 'reactstrap';\r\nimport SignUpContainer from \"./SignUpContainer\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {name: \"hello\"};\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <MuiThemeProvider>\r\n            {this.props.children}\r\n            <SignUpContainer/>\r\n        </MuiThemeProvider>\r\n    );\r\n    }\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Home.js",["139","140","141","142","143","144"],"import React, { useState } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport initialData from \"../initial-data\";\r\nimport Column from '../Column.jsx';\r\nimport '../style/Home.css';\r\nimport '../style/SetTimer.css';\r\nimport Dialog from \"./DoneDialog\";\r\nimport Timer from \"./Timer\";\r\nimport SetTimer from \"./SetTimer\";\r\nimport Fade from '@material-ui/core/Fade'\r\nimport { CommunicationSpeakerPhone } from \"material-ui/svg-icons\";\r\n\r\n// Styles\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\n// let flowers = [];\r\nclass Home extends React.Component {\r\n  state = initialData; //initialDataÎäî ÏßÄÍ∏àÏùÄ Îî∞Î°ú ÌååÏùºÏóêÏÑú ÌïòÎìúÏΩîÎî©Ìïú ÏÉÅÌÉú. Ïù¥Ï†ú DBÏóêÏÑú Ïñ¥ÏºÄ Î∂ÄÎ•ºÏßÄ Î∞©Î≤ïÏùÑ Ï∞æÏïÑÎ≥¥Ïûê.\r\n<<<<<<< HEAD\r\n  \r\n  \r\n=======\r\n\r\n>>>>>>> 40ae80733075616449199be8da24ec2cce0c0ac2\r\n  // ÎìúÎûòÍ∑∏Í∞Ä ÏãúÏûëÎêòÎ©¥\r\n  onDragStart = (startColumn, provided) => {\r\n    document.body.style.transition = 'background-color 0.2s ease';\r\n  }\r\n  // ÎìúÎûòÍ∑∏Î•º Ìï¥ÏÑú ÏÉÅÌô©Ïù¥ ÏóÖÎç∞Ïù¥Ìä∏ÎêòÎ©¥\r\n  onDragUpdate = update => {\r\n    const { destination } = update;\r\n    const opacity = destination ?\r\n      destination.index / Object.keys(this.state.tasks).length\r\n      : 0;\r\n    document.body.style.backgroundColor = `rgba(153,  141, 217, ${opacity})`;\r\n  }\r\n  //Îî± ÎìúÎ°≠ÌñàÏùÑ ÎïåÍ∞Ä ÎêòÎ©¥\r\n  onDragEnd = result => {\r\n    document.body.style.color = 'inherit';\r\n    document.body.style.backgroundColor = 'inherit';\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    // TaskÍ∞Ä ÏòÆÍ≤®Ï°åÏùÑ Îïå Ï≤òÎ¶¨ÌïòÍ∏∞\r\n    if (!destination) { // 1. ÏïÑÏòà Ïù¥ÏÉÅÌïú Î∞îÍπ• Í≥≥Ïóê ÎÜìÏïòÏùÑ Í≤ΩÏö∞\r\n      return;\r\n    }\r\n    if ( // 2. Ïù¥Ï†Ñ ÏúÑÏπòÏôÄ Í∞ôÏùÄ Í≥≥Ïóê ÎÜìÏïòÏùÑ Í≤ΩÏö∞\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // 3. TaskÍ∞Ä Done ÏπºÎüºÏúºÎ°ú ÏòÆÍ≤®Ï°åÏùÑ Í≤ΩÏö∞\r\n    if (destination.droppableId === 'column-3') {\r\n\r\n      const item = \"üåû\";\r\n      this.state.tasks[draggableId].isDone = true; // Ìï¥Îãπ TaskÎ•º disableDraggable ÌïúÎã§\r\n      //showItem(item);\r\n    }\r\n    // showItem(item)=() =>{\r\n    //   <div>\r\n    //   <Fade in={true} timeout={4000}>\r\n    //     <p>True Component</p>\r\n    //   </Fade>\r\n\r\n    //   <Fade in={false} timeout={4000}>\r\n    //     <p>False Component</p>\r\n    //   </Fade>\r\n    //   </div>\r\n    //   // return <Fade className=\"fade-in\" timeout = {2000}> itemcreate {console.log(\"fade in\")} </Fade>\r\n    // }\r\n\r\n\r\n    // Ïó¨Í∏∞ÏÑú Ïû†Íπê... Column ÏûêÏ≤¥Í∞Ä ÏòÆÍ≤®Ï°åÏùÑ Îïå Ï≤òÎ¶¨ÌïòÍ∏∞\r\n    if (type === 'column') {\r\n      const newColumnOrder = Array.from(this.state.columnOrder);\r\n      newColumnOrder.splice(source.index, 1);\r\n      newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n      const newState = {\r\n        ...this.state,\r\n        columnOrder: newColumnOrder\r\n      };\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    const startColumn = this.state.columns[source.droppableId];\r\n    const finishColumn = this.state.columns[destination.droppableId];\r\n    \r\n    // 4. persist reordering of task that has been moved within a list\r\n    // 4. TaskÍ∞Ä Column ÎÇ¥ÏóêÏÑú ÏòÆÍ≤®Ï°åÏùÑ Îïå Í∑∏ ÏòÆÍ≤®ÏßÑ ÏûêÎ¶¨Í∞Ä Ïú†ÏßÄÎêòÎèÑÎ°ù Ï≤òÎ¶¨ÌïòÍ∏∞\r\n    if (startColumn === finishColumn) {\r\n      const newTaskIds = Array.from(startColumn.taskIds);\r\n      newTaskIds.splice(source.index, 1); // Ïö∞ÏÑ† ÏòÆÍ≤®Ïßê ÎãπÌïú TaskÎ•º ÏõêÎûò ÏûêÎ¶¨ÏóêÏÑú ÏóÜÏï†Í≥†\r\n      newTaskIds.splice(destination.index, 0, draggableId); // ÏòÆÍ∏¥ ÌõÑÏùò Í∑∏ ÏûêÎ¶¨Ïóê ÎÅºÏõåÎÑ£ÎäîÎã§\r\n\r\n      const newColumn = { // Column ÎÇ¥ TaskÎì§ Í∞±Ïã†\r\n        ...startColumn,\r\n        taskIds: newTaskIds\r\n      };\r\n      const newState = { // Column Í∞±Ïã†\r\n        ...this.state,\r\n        columns: {\r\n          ...this.state.columns,\r\n          [newColumn.id]: newColumn\r\n        }\r\n      };\r\n\r\n      this.setState(newState);\r\n      return;\r\n    }\r\n\r\n    // 5. persist reordering of task that has been moved from one list to another\r\n    // 5. TaskÍ∞Ä Column ÎÑàÎ®∏ ÏòÆÍ≤®Ï°åÏùÑ Îïå Í∑∏ ÏòÆÍ≤®ÏßÑ ÏûêÎ¶¨Í∞Ä Ïú†ÏßÄÎêòÎèÑÎ°ù Ï≤òÎ¶¨ÌïòÍ∏∞\r\n    const startTaskIds = Array.from(startColumn.taskIds);\r\n    startTaskIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...startColumn,\r\n      taskIds: startTaskIds\r\n    };\r\n    const finishTaskIds = Array.from(finishColumn.taskIds);\r\n    finishTaskIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finishColumn,\r\n      taskIds: finishTaskIds\r\n    };\r\n\r\n    const newState = {\r\n      ...this.state,\r\n      columns: {\r\n        ...this.state.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    }\r\n    this.setState(newState)\r\n    \r\n    console.log(\"Todo is \"+newState.columns[\"column-1\"].taskIds);\r\n    console.log(\"In Progress is \"+newState.columns[\"column-2\"].taskIds);\r\n    \r\n    // 6. TaskÍ∞Ä Column ÎÑàÎ®∏ ÏòÆÍ≤®Ï°åÏùÑ Îïå, Ïù¥Ï†ú ÎçîÏù¥ÏÉÅ To-do, In Progress ColumnÏóê ÏïÑÎ¨¥ Í≤ÉÎèÑ ÏóÜÏùÑ Í≤ΩÏö∞(Ï¶â Ï†ÑÎ∂Ä DoneÏπºÎüºÏúºÎ°ú ÏòÆÍ≤®Ï°åÏùÑ Í≤ΩÏö∞)\r\n    const toDoIsNotEmpty = newState.columns[\"column-1\"].taskIds.length;\r\n    const InProgressIsNotEmpty = newState.columns[\"column-2\"].taskIds.length;\r\n    const FLOWERS = [\"üåπ\",\"üå∫\",\"üåª\",\"üåº\",\"üå∑\",\"üçÄ\",\"üåµ\"];\r\n    const FLOWER_COUNT = 7;\r\n    const LS_KEY_FLOWERS = \"flowers\";\r\n\r\n    if (!toDoIsNotEmpty && !InProgressIsNotEmpty) {\r\n      const randomIndex = Math.floor(Math.random() * FLOWER_COUNT);\r\n      const theFlower = FLOWERS[randomIndex];\r\n      alert(`Congratulations!\\nYou've got your Flower:\\n${theFlower}`);\r\n\r\n      let currentFlowersString = getFlower();\r\n      if (!currentFlowersString){ // localÏóê ÏïÑÎ¨¥Í≤ÉÎèÑ ÏóÜÏùå\r\n        currentFlowersString = theFlower;\r\n      }\r\n      else\r\n      currentFlowersString += (\",\"+theFlower);\r\n      // console.log(currentFlowersString);\r\n\r\n      saveFlower(currentFlowersString);\r\n    }\r\n    function getFlower(){\r\n      return localStorage.getItem(LS_KEY_FLOWERS);\r\n    }\r\n    function saveFlower(flowers){\r\n      \r\n      localStorage.setItem(LS_KEY_FLOWERS, flowers);\r\n    }\r\n\r\n    // TODO: Í∑∏Î¶¨Í≥† Ïù¥Î†áÍ≤å reorderÎêú indexÍ∞íÎì§ÏùÑ ÎîîÎπÑÏóê Ï†ÄÏû•Ìï¥Ïïº refreshÌñàÏùÑ ÎïåÎèÑ Ïú†ÏßÄÎê† Ïàò ÏûàÎäîÎç∞, Ïñ¥ÎñªÍ≤å ÌïòÏßÄ?\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <SetTimer\r\n        toDoIsNotEmpty={this.state.columns[\"column-1\"].taskIds.length}\r\n        InProgressIsNotEmpty={this.state.columns[\"column-2\"].taskIds.length}\r\n      />\r\n      {/* <div className=\"home\"> */}\r\n        <div className=\"toDoContainer\">\r\n          <DragDropContext\r\n          onDragEnd={this.onDragEnd}\r\n          onDragStart={this.onDragStart}\r\n          onDragUpdate={this.onDragUpdate}\r\n          >\r\n            <Droppable\r\n              droppableId=\"all-columns\"\r\n              direction=\"horizontal\"\r\n              type=\"column\"\r\n            >\r\n              {provided => (\r\n                <Container\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                >\r\n                  {this.state.columnOrder.map((columnId, index) => {\r\n                    const column = this.state.columns[columnId];\r\n                    const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\r\n                    return <Column key={column.id} column={column} tasks={tasks} index={index} />;\r\n                  })}\r\n                  {provided.placeholder}\r\n                  \r\n                </Container>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n        <div className=\"budImageContainer\">\r\n          <img src=\"https://www.pngrepo.com/png/169302/180/bud.png\"/>\r\n        </div>\r\n      {/* </div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyGarden.js",["145","146","147","148","149","150","151","152"],"import React from \"react\";\r\n// import { MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\n// import {Container, Col, Row, Button} from 'react-bootstrap';\r\nimport '../style/MyGarden.css'\r\nimport Grid from \"./Grid\"\r\nimport TreeList from \"./TreeList\"\r\nimport Test from \"./Test\"\r\nimport Tree from \"./Tree\"\r\nimport My from \"./My\"\r\nimport Ground from '../Image/ground1.png';\r\nimport grass from '../Image/grass1.png';\r\nimport { Button } from \"react-bootstrap\";\r\nimport Dialog from \"./Dialog\";\r\n\r\nclass MyGarden extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: true,\r\n            //itemFriends: [\"üéÑ\", \"üéà\", \"üéÉ\"]\r\n        }\r\n    }\r\n    _showDialog() {\r\n        this.setState({showDialog: this.state.showDialog});\r\n    }\r\n\t_showItem() {\r\n        this.setState({item: this.state.itemFriends});\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='MyGarden'>\r\n                \r\n                {/* <img src = {Ground} className=\"img-garden\"/> */}\r\n                <div className=\"img-garden\"/>\r\n\t\t\t\t{this._showDialog.bind(this)}\r\n                {this._showItem.bind(this)}\r\n                {/* <Button className='button' onClick={this._showDialog.bind(this)}> Show item </Button> */}\r\n                <Dialog show={this.state.showDialog} />\r\n                {/* <Dialog  show={this.state.showDialog} item = {this.state.item1}/> */}\r\n                {/* <Dialog  show={this.state.showDialog} item = {this.state.item2}/> */}\r\n                {/* <Dialog  show={this.state.showDialog} item = {this.state.item4}/>  */}\r\n           \r\n         \r\n\t\t\t </div>\r\n\r\n\t\t);\r\n\t}\r\n} \r\nexport default MyGarden;\r\n    \r\n\r\n\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\SidebarData.js",["153","154","155","156"],"import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: 'Home',\r\n    path: '/',\r\n    // icon: <AiIcons.AiFillHome />,\r\n    icon: \"üè°\",\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Profile',\r\n    path: '/profile',\r\n    // icon: <IoIcons.IoIosPaper />,\r\n    icon: \"üë©‚Äçüåæ\",\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'My Garden',\r\n    path: '/mygarden',\r\n    // icon: <FaIcons.FaCartPlus />,\r\n    icon: \"üå±\",\r\n    cName: 'nav-text'\r\n  }\r\n];","C:\\Users\\q\\MadCampWeek3-test2\\src\\Column.jsx",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUpContainer.js",["157"],"import React, { Component } from \"react\";\r\nimport SignUpForm from \"./SignUpForm.js\";\r\nconst axios = require(\"axios\");\r\nconst FormValidators = require(\"./validate\");\r\nconst validateSignUpForm = FormValidators.validateSignUpForm;\r\nconst zxcvbn = require(\"zxcvbn\");\r\n\r\n\r\nclass SignUpContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errors: {},\r\n      user: {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        pwconfirm: \"\"\r\n      },\r\n      btnTxt: \"show\",\r\n      type: \"password\",\r\n      score: \"0\"\r\n    };\r\n\r\n    this.pwMask = this.pwMask.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submitSignup = this.submitSignup.bind(this);\r\n    this.validateForm = this.validateForm.bind(this);\r\n    this.pwHandleChange = this.pwHandleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({\r\n      user\r\n    });\r\n  }\r\n\r\n  pwHandleChange(event) {\r\n    const field = event.target.name;\r\n    const user = this.state.user;\r\n    user[field] = event.target.value;\r\n\r\n    this.setState({\r\n      user\r\n    });\r\n\r\n    if (event.target.value === \"\") {\r\n      this.setState((state) =>\r\n        Object.assign({}, state, {\r\n          score: \"null\"\r\n        })\r\n      );\r\n    } else {\r\n      var pw = zxcvbn(event.target.value);\r\n      this.setState((state) =>\r\n        Object.assign({}, state, {\r\n          score: pw.score + 1\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  submitSignup(user) {\r\n    var params = { username: user.usr, password: user.pw, email: user.email };\r\n    axios\r\n      .post(\"https://ouramazingserver.com/api/signup/submit\", params)\r\n      .then((res) => {\r\n        if (res.data.success === true) {\r\n          localStorage.token = res.data.token;\r\n          localStorage.isAuthenticated = true;\r\n          window.location.reload();\r\n        } else {\r\n          this.setState({\r\n            errors: { message: res.data.message }\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Sign up data submit error: \", err);\r\n      });\r\n  }\r\n\r\n  validateForm(event) {\r\n    event.preventDefault();\r\n    var payload = validateSignUpForm(this.state.user);\r\n    if (payload.success) {\r\n      this.setState({\r\n        errors: {}\r\n      });\r\n      var user = {\r\n        usr: this.state.user.username,\r\n        pw: this.state.user.password,\r\n        email: this.state.user.email\r\n      };\r\n      this.submitSignup(user);\r\n    }\r\n     else {\r\n      const errors = payload.errors;\r\n      this.setState({\r\n        errors\r\n      });\r\n    }\r\n  }\r\n\r\n  pwMask(event) {\r\n    event.preventDefault();\r\n    this.setState((state) =>\r\n      Object.assign({}, state, {\r\n        type: this.state.type === \"password\" ? \"input\" : \"password\",\r\n        btnTxt: this.state.btnTxt === \"show\" ? \"hide\" : \"show\"\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignUpForm onSubmit={this.validateForm} onChange={this.handleChange} onPwChange={this.pwHandleChange} e\r\n        rrors={this.state.errors} user={this.state.user} score={this.state.score} btnTxt={this.state.btnTxt} type={this.state.type} pwMask={this.pwMask}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpContainer;\r\n\r\n// module.exports = SignUpContainer;\r\n\r\n\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\initial-data.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\DoneDialog.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Timer.js",["158","159"],"import React, { PropTypes, Component } from 'react';\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        days: 0,\r\n        hours: 0,\r\n        min: 0,\r\n        sec: 0,\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // update every second\r\n        this.interval = setInterval(() => {\r\n          const date = this.calculateCountdown(this.props.date);\r\n          date ? this.setState(date) : this.stop();\r\n        }, 1000);\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        this.stop();\r\n      }\r\n\r\n      calculateCountdown(endDate) {\r\n        let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\r\n        console.log(new Date(endDate));\r\n        console.log(Date.parse(new Date(endDate)));\r\n        console.log(\"diff\", diff);\r\n    \r\n        // clear countdown when date is reached\r\n        if (diff <= 0) return false;\r\n    \r\n        const timeLeft = {\r\n          years: 0,\r\n          days: 0,\r\n          hours: 0,\r\n          min: 0,\r\n          sec: 0,\r\n          millisec: 0,\r\n        };\r\n    \r\n        // calculate time difference between now and expected date\r\n        if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\r\n          timeLeft.years = Math.floor(diff / (365.25 * 86400));\r\n          diff -= timeLeft.years * 365.25 * 86400;\r\n        }\r\n        if (diff >= 86400) { // 24 * 60 * 60\r\n          timeLeft.days = Math.floor(diff / 86400);\r\n          diff -= timeLeft.days * 86400;\r\n        }\r\n        if (diff >= 3600) { // 60 * 60\r\n          timeLeft.hours = Math.floor(diff / 3600);\r\n          diff -= timeLeft.hours * 3600;\r\n        }\r\n        if (diff >= 60) {\r\n          timeLeft.min = Math.floor(diff / 60);\r\n          diff -= timeLeft.min * 60;\r\n        }\r\n        timeLeft.sec = diff;\r\n    \r\n        return timeLeft;\r\n      }\r\n\r\n      stop() {\r\n        clearInterval(this.interval);\r\n      }\r\n    \r\n      addLeadingZeros(value) {\r\n        value = String(value);\r\n        while (value.length < 2) {\r\n          value = '0' + value;\r\n        }\r\n        return value;\r\n      }\r\n    \r\n      render() {\r\n        const Timer = this.state;\r\n    \r\n        return (\r\n          <div className=\"Countdown\">\r\n            <span className=\"Countdown-col\">\r\n              <span className=\"Countdown-col-element\">\r\n                  <strong>{this.addLeadingZeros(Timer.days)}</strong>\r\n                  <span>{Timer.days === 1 ? 'Day' : 'Days'}</span>\r\n              </span>\r\n            </span>\r\n    \r\n            <span className=\"Countdown-col\">\r\n              <span className=\"Countdown-col-element\">\r\n                <strong>{this.addLeadingZeros(Timer.hours)}</strong>\r\n                <span>Hours</span>\r\n              </span>\r\n            </span>\r\n    \r\n    \r\n            <span className=\"Countdown-col\">\r\n              <span className=\"Countdown-col-element\">\r\n                <strong>{this.addLeadingZeros(Timer.min)}</strong>\r\n                <span>Min</span>\r\n              </span>\r\n            </span>\r\n    \r\n            <span className=\"Countdown-col\">\r\n              <span className=\"Countdown-col-element\">\r\n                <strong>{this.addLeadingZeros(Timer.sec)}</strong>\r\n                <span>Sec</span>\r\n              </span>\r\n            </span>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    // Timer.PropTypes = {\r\n    //   date: PropTypes.String.isRequired\r\n    // };\r\n    \r\n    // Timer.defaultProps = {\r\n    //   date: new Date()\r\n    // };\r\n    \r\n    export default Timer;\r\n\r\n      \r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Test.js",["160","161","162"],"import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport \"../style/Test.css\"\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\"];\r\nconst ground = [\"üéÖ\", \"üë©‚Äçüé§\", \"üëº\", \"üë©‚Äçü¶∞\",\"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\"]\r\n// const extension = [\"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\"]\r\n// [[\"üë®‚Äçü¶±\", \"üë±‚Äç‚ôÄÔ∏è\", \"üë®\", \"üßí\"],\r\n//  [\"üë©‚Äçü¶≥\", \"üë∏\", \"üôÇ\",\"üò†\"],\r\n//  [\"üòî\",\"üòñ\",\"üôÅ\",\"ü§¨\"],\r\n//  [\"ü•∂\", \"üò¶\",\"ü§¢\", \"üòà\"]];\r\n\r\n// // fake data generator\r\n// const getItems = (count, offset = 0) =>\r\n//     Array.from({ length: count }, (v, k) => k).map(k => ({\r\n//         id: `item-${k + offset}`,\r\n//         content: `item ${k + offset}`\r\n//     }));\r\n// const groundList =(count, offset =0)=> \r\n// const array\r\n// (tree.map((items, index) => {\r\n//     {items.map((subItem, sIndex) =>{\r\n//         id: `item==${sIndex + offset}`,\r\n//         content: tree [sIndex + offset] \r\n//     })}\r\n// }))\r\n\r\n\r\nconst treeList = (count, offset = 0) =>\r\n    Array.from({length: count},(v, k) => k).map(k => ({\r\n        id: `item==${k + offset}`,\r\n        content: tree [k+ offset] \r\n    }))\r\n\r\nconst groundList = (count, offset = 0) =>\r\n    Array.from({length: count},(v, k) => k).map(k => ({\r\n        id: `ite==${k + offset}`,\r\n        content: ground [k+ offset] \r\n    }))\r\n\r\n// const extensionList = (count, offset = 0) =>\r\n// Array.from({length: count},(v, k) => k).map(k => ({\r\n//     id: `ite==${k + offset}`,\r\n//     content: extension [k+ offset] \r\n// }))\r\n\r\n\r\n// a little function to help us with reordering the result\r\n// const reorder = (list, startIndex, endIndex) => {\r\n//     const result = Array.from(list);\r\n//     const [removed] = result.splice(startIndex, 1);\r\n//     result.splice(endIndex, 0, removed);\r\n\r\n//     return result;\r\n// };\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    //source ÏõÄÏßÅÏù∏ Ï™ΩÏùò Î¶¨Ïä§Ìä∏, destClone Î™©Ï†ÅÏßÄ Ï™ΩÏùò Î¶¨Ïä§Ìä∏\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    console.log(sourceClone)\r\n    console.log(destClone)\r\n\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    //ÏòÆÍ≤®ÏßÑ ÏïÑÏù¥ÌÖú [removed]\r\n    console.log([removed])\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst grid = 20;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    padding: grid ,\r\n    margin: `${grid}px ${grid}px ${grid}px ${grid}px`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? 'grey' : 'grey',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    background: isDraggingOver ? 'lightgrey' : 'lightgrey',\r\n    padding: grid,\r\n    width: 250\r\n});\r\n\r\nclass test extends React.Component {\r\n    state = {\r\n        items: treeList(3),\r\n        //selected: extension[4][4]\r\n        selected: groundList(8),\r\n        //extension: extensionList(4)\r\n    };\r\n\r\n    id2List = {\r\n        droppable: 'items',\r\n        droppable2: 'selected',\r\n        //droppable3: 'extension'\r\n\r\n    };\r\n\r\n    getList = id => this.state[this.id2List[id]];\r\n  \r\n    onDragEnd = result => {\r\n        const { source, destination } = result;\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        //ÏûêÍ∏∞ ÏûêÏã†ÏúºÎ°ú ÏõÄÏßÅÏù¥Îäî Í≤ΩÏö∞ \r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(this.getList(source.droppableId),source.index,destination.index);\r\n            let state = { items };\r\n            const newState = [state]\r\n            newState[source.droppableId] = items;\r\n            this.setState(newState)\r\n            \r\n            //this.setState(state);\r\n            // //Î™®Î•¥Í≤†Ïùå\r\n            // if (source.droppableId === 'droppable2') {\r\n            //     state = { selected: items };\r\n            // }\r\n\r\n        } else {\r\n            //ÏõÄÏßÅÏù∏ ÏÉÅÌÉú Í≤∞Í≥º Í∞í \r\n            const result = move(this.getList(source.droppableId),this.getList(destination.droppableId),source,destination);\r\n            //this.setState({items: result.droppable, selected: result.droppable2//, extension = result.droppable3\r\n            const newState = [this.state.selected]\r\n            newState[source.droppableId] = result[source.droppableId];\r\n            newState[destination.droppableId] = result[destination.droppableId]\r\n            this.setState(newState.filter(group => group.length))\r\n            \r\n            }\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button type = \"button\" onClick ={() => {this.setState([this.state.selected,[]]);}} >add new group</button>\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <div class = \"droppable\">\r\n                <Droppable droppableId=\"droppable\" direction = \"horizontal\">\r\n                    {(provided, snapshot) => (\r\n                        <div \r\n                            ref={provided.innerRef}\r\n                            \r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                                <p>tree</p>\r\n                                <div class = \"item\">\r\n                            {this.state.items.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div \r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            \r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            </div>\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                </div>\r\n                <div className = \"droppable2\">\r\n                <Droppable droppableId=\"droppable2\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            \r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                                <p>garden</p>\r\n                                <div className = \"item\">\r\n                            {this.state.selected.map((item, index) => (\r\n            \r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            \r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            </div>\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                </div>\r\n                <div className = \"div2\">\r\n                {/* <Droppable droppableId=\"droppable3\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            style={getListStyle(snapshot.isDraggingOver)}>\r\n                            {this.state.extension.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}>\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style\r\n                                            )}>\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable> */}\r\n                </div>\r\n            </DragDropContext>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default test;\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\TreeList.js",["163","164"],"import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst tree = [\"üçã\", \"üçä\", \"üçà\"];\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n    \r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    //id: tree [k+ offset],//-new Date().getTime(),\r\n    id:  `item-${k + offset}-${new Date().getTime()}`,\r\n    content: tree [k+ offset] \r\n    //content: `item ${k + offset}`\r\n  }));\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nfunction TreeList() {\r\n  const [state, setState] = useState([getItems(3)])\r\n  //= useState([getItems(3), getItems(5, 10)]);\r\n\r\n  function onDragEnd(result) {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n\r\n    if (sInd === dInd) {\r\n      const items = reorder(state[sInd], source.index, destination.index);\r\n      const newState = [...state];\r\n      newState[sInd] = items;\r\n      setState(newState);\r\n    } else {\r\n      const result = move(state[sInd], state[dInd], source, destination);\r\n      const newState = [...state];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setState(newState.filter(group => group.length));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       {/* <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, []]);\r\n        }}\r\n      >\r\n        Add new group\r\n      </button> \r\n      <button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setState([...state, getItems(1)]);\r\n        }}\r\n      >\r\n        Add new item\r\n      </button>  */}\r\n      <div style={{ display: \"flex\" }}>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {state.map((el, ind) => (\r\n            <Droppable key={ind} droppableId={`${ind}`}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  style={getListStyle(snapshot.isDraggingOver)}\r\n                  {...provided.droppableProps}\r\n                >\r\n                  {el.map((item, index) => (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}\r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-around\"\r\n                            }}\r\n                          >\r\n                            {item.content}\r\n                            {/* <button\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                const newState = [...state];\r\n                                newState[ind].splice(index, 1);\r\n                                setState(\r\n                                  newState.filter(group => group.length)\r\n                                );\r\n                              }}\r\n                            >\r\n                              delete\r\n                            </button> */}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeList;\r\n","C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Tree.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\SetTimer.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\Dialog.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Task.jsx",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\SignUpForm.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\validate.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\Sign\\PasswordStr.js",[],"C:\\Users\\q\\MadCampWeek3-test2\\src\\route\\MyTree.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":15},{"ruleId":"169","severity":1,"message":"173","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":13},{"ruleId":"169","severity":1,"message":"174","line":11,"column":8,"nodeType":"171","messageId":"172","endLine":11,"endColumn":12},{"ruleId":"169","severity":1,"message":"175","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":20},{"ruleId":"169","severity":1,"message":"176","line":2,"column":9,"nodeType":"171","messageId":"172","endLine":2,"endColumn":12},{"ruleId":"169","severity":1,"message":"177","line":2,"column":14,"nodeType":"171","messageId":"172","endLine":2,"endColumn":17},{"ruleId":"169","severity":1,"message":"178","line":2,"column":19,"nodeType":"171","messageId":"172","endLine":2,"endColumn":28},{"ruleId":"179","severity":1,"message":"180","line":20,"column":4,"nodeType":"181","endLine":20,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":11,"column":14,"nodeType":"184","messageId":"185","endLine":11,"endColumn":30,"fix":"186"},{"ruleId":"179","severity":1,"message":"180","line":6,"column":9,"nodeType":"181","endLine":6,"endColumn":48},{"ruleId":"169","severity":1,"message":"187","line":11,"column":9,"nodeType":"171","messageId":"172","endLine":11,"endColumn":17},{"ruleId":"169","severity":1,"message":"188","line":1,"column":16,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"189","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":16},{"ruleId":"169","severity":1,"message":"190","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":13},{"ruleId":"169","severity":1,"message":"191","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":13},{"ruleId":"169","severity":1,"message":"192","line":5,"column":10,"nodeType":"171","messageId":"172","endLine":5,"endColumn":16},{"ruleId":"169","severity":1,"message":"193","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":14},{"ruleId":"169","severity":1,"message":"173","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":13},{"ruleId":"169","severity":1,"message":"194","line":11,"column":10,"nodeType":"171","messageId":"172","endLine":11,"endColumn":35},{"ruleId":"195","severity":1,"message":"196","line":54,"column":7,"nodeType":"184","endLine":54,"endColumn":36},{"ruleId":"169","severity":1,"message":"197","line":158,"column":11,"nodeType":"171","messageId":"172","endLine":158,"endColumn":15},{"ruleId":"179","severity":1,"message":"180","line":195,"column":11,"nodeType":"181","endLine":195,"endColumn":70},{"ruleId":"169","severity":1,"message":"174","line":5,"column":8,"nodeType":"171","messageId":"172","endLine":5,"endColumn":12},{"ruleId":"169","severity":1,"message":"198","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":16},{"ruleId":"169","severity":1,"message":"199","line":7,"column":8,"nodeType":"171","messageId":"172","endLine":7,"endColumn":12},{"ruleId":"169","severity":1,"message":"200","line":8,"column":8,"nodeType":"171","messageId":"172","endLine":8,"endColumn":12},{"ruleId":"169","severity":1,"message":"201","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":10},{"ruleId":"169","severity":1,"message":"202","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":14},{"ruleId":"169","severity":1,"message":"203","line":11,"column":8,"nodeType":"171","messageId":"172","endLine":11,"endColumn":13},{"ruleId":"169","severity":1,"message":"192","line":12,"column":10,"nodeType":"171","messageId":"172","endLine":12,"endColumn":16},{"ruleId":"169","severity":1,"message":"204","line":1,"column":8,"nodeType":"171","messageId":"172","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"205","line":2,"column":13,"nodeType":"171","messageId":"172","endLine":2,"endColumn":20},{"ruleId":"169","severity":1,"message":"206","line":3,"column":13,"nodeType":"171","messageId":"172","endLine":3,"endColumn":20},{"ruleId":"169","severity":1,"message":"207","line":4,"column":13,"nodeType":"171","messageId":"172","endLine":4,"endColumn":20},{"ruleId":"169","severity":1,"message":"188","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"208","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"188","line":1,"column":28,"nodeType":"171","messageId":"172","endLine":1,"endColumn":37},{"ruleId":"169","severity":1,"message":"188","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"183","line":31,"column":18,"nodeType":"184","messageId":"185","endLine":31,"endColumn":34,"fix":"209"},{"ruleId":"182","severity":1,"message":"183","line":37,"column":18,"nodeType":"184","messageId":"185","endLine":37,"endColumn":36,"fix":"210"},{"ruleId":"169","severity":1,"message":"189","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":16},{"ruleId":"182","severity":1,"message":"183","line":12,"column":14,"nodeType":"184","messageId":"185","endLine":12,"endColumn":30,"fix":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'Timer' is defined but never used.","'Grid' is defined but never used.","'Text' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property k+ offset.","MemberExpression","unexpectedWhitespace",{"range":"214","text":"215"},"'nameText' is assigned a value but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'Popup' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'Dialog' is defined but never used.","'CommunicationSpeakerPhone' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","'year' is assigned a value but never used.","'TreeList' is defined but never used.","'Test' is defined but never used.","'Tree' is defined but never used.","'My' is defined but never used.","'Ground' is defined but never used.","'grass' is defined but never used.","'React' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'IoIcons' is defined but never used.","'PropTypes' is defined but never used.",{"range":"216","text":"215"},{"range":"217","text":"215"},{"range":"218","text":"215"},"no-global-assign","no-unsafe-negation",[487,488],"",[1073,1074],[1257,1258],[446,447]]
>>>>>>> 7100b5c0a995842b60d68fa1cc6569d07fbeb083
>>>>>>> 8a74356122ab115ef8c1c096e798c4fe6591cb3a
